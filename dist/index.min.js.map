{"version":3,"sources":["webpack://noreact/webpack/universalModuleDefinition","webpack://noreact/webpack/bootstrap","webpack://noreact/./src/MVVM.ts","webpack://noreact/./src/VNode.ts","webpack://noreact/./src/attribute.ts","webpack://noreact/./src/dev.ts","webpack://noreact/./src/diff.ts","webpack://noreact/./src/event-center.ts","webpack://noreact/./src/index.ts","webpack://noreact/./src/react.ts","webpack://noreact/./src/refresh.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","diff_1","event_center_1","VNode_1","react_1","refresh_1","dev_1","__importDefault","MVVM","$props","this","$eventRegister","$children","$isdirty","$hasRenderedDom","$mountDom","$isDestroyed","undefined","$watchObject","$id","GetId","$didMounted","$willUnMount","$emitUp","event","data","_i","arguments","length","_a","$root","EmitUp","apply","concat","$emitDown","EmitDown","$on","callback","push","RegisterEvent","$broadcast","TriggerEvent","$Trigger","cbs","forEach","cb","$ToDom","$Render","$checkNoVNode","$DoRender","ToDom","$ToHtml","ToHtml","$GetRoot","$SetChildren","children","$GetChildren","$Dirty","InsertQueue","$GetDirty","$ApplyRefresh","default","OnChange","React","ChangeMode","old","target","_newroot","newroot","$compareVNode","$useOld","doms","res_1","GetParent","GetSiblingDom","isparent","dom","append","parentNode","insertBefore","Doms","remove","isMulti","SetParent","Destroy","oldmvvms","GetAllMvvm","Rendered","newmvvms","id","_this","keys","startsWith","$attachedVNode","VNode","SetMvvm","obj","isNotRef","Ref","isNotVnode","isNotMvvm","isObj","toString","isArr","watchers_1","descriptor","getOwnPropertyDescriptor","configurable","value_1","indexOf","set","val","item","$watchArray","arr","watchers","oldproto","getPrototypeOf","$marked","proto","getArrayProto","setPrototypeOf","oldNode","newNode","GetType","instance","GetMvvm","newInstance","$resetProps","ApplyAttrDiff","GetAttrs","$diff","GetChildren","$IsParentOf","mvvm","olds","news","parent","opers","Diff","index","state","oldValue","newValue","newValueOrigin","InsertVNode","$devNew","RemoveVNode","isdeprecated","$devDelete","vnode","mvvms","nextmvvm","parent_1","GetFirstChildMvvm","GetNearestAncestorMvvm","props","oldkeys_1","newkeys_1","$setProp","oldvalue","str","textnode","SetText","SetAttr","Error","$Rendered","$Destroy","$IsDestroyed","$AttachVNode","$AppendTo","elem","document","querySelector","AddMvvm","$GetMountDom","$GetAttachedVNode","left","right","GetAttr","constructor","GetTag","GetText","$GetProps","oldpush","oldpop","pop","oldsplice","splice","oldshift","shift","oldunshift","unshift","method","func","args","res","Array","slice","attribute_1","type","tag","text","attrs","isDestroyed","doms_1","child","SetTag","component","domchange","removeChild","SetChildren","IsDestroyed","current","newAttrs","eventName","GetEventAttrName","isEvent","removeEventListener","RemoveAttr","style","oldStyle_1","newStyle_1","k","addEventListener","ApplyAttr","innerhtmls_1","attrStr","SerializeAttr","join","innerhtmls_2","elem_1","createElement","appendChild","children_1","createTextNode","_b","AttachDom","total_1","VNODE_ID","$isServerRender","ServerRender","isServerRender","applyAttr","className","setAttribute","class","ref","HTMLInputElement","HTMLSelectElement","checked","removeAttr","serializeAttr","str_1","attr","test","toLowerCase","dev","Dev","roots","listeners","Subscribe","listener","init","toJson","getMvvm","Unsubscribe","filter","mvvm_1","name_1","data_1","extra","instances","__noreact_dev","oldset","newset","compare","o2n","n2o","square","row","j","fromRow","fromColumn","initSquare","findShortest","lastnum","same","p1","p2","p3","min","Math","column","states","unit","getOpers","reverse","events","MVVM_1","Fragment","NoReact","Function","Elem","allchildren","flatten","vnode_1","vnode_2","vnode_3","prefix","counter","promise","queue","tempQueue","maxLoop","Promise","resolve","reject","then","sort","m1","m2","Refresh"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"noreact\"] = factory();\n\telse\n\t\troot[\"noreact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Diff } from './diff';\nimport { RegisterEvent, TriggerEvent } from './event-center';\nimport { VNode } from './VNode';\nimport { React, GetId, Ref } from './react';\nimport { InsertQueue } from './refresh';\nimport Dev from \"./dev\";\n\nexport abstract class MVVM {\n    private $root: VNode;\n    private $attachedVNode: VNode;\n    /**组件内部的事件注册中心 */\n    private $eventRegister: { [event: string]: Function[] } = {};\n    /**该组件拥有的子级虚拟树 */\n    protected $children: VNode[] = [];\n    private $isdirty = false;\n    private $props: any;\n    private $hasRenderedDom = false;\n    private $mountDom: HTMLElement = null;\n    private $isDestroyed = false;\n    protected $id: number;\n\n    constructor($props?: any) {\n        if ($props != undefined)\n            this.$props = $props;\n        else\n            this.$props = {};\n        this.$watchObject(this.$props);\n        this.$id = GetId();\n    }\n    /**渲染完成后该方法会被调用，此时elem成员变量才可以被访问到 */\n    protected $didMounted(): void { }\n    /**销毁函数 */\n    protected $willUnMount(): void { }\n    /**该组建的渲染方法，该方法必须返回一个虚拟树 */\n    protected abstract $Render(): any;\n\n    /**向所有父级发送消息 */\n    protected $emitUp(event: string, ...data: any[]) {\n        this.$root.EmitUp(event, ...data);\n    }\n    /**向所有子级发送消息 */\n    protected $emitDown(event: string, ...data: any[]) {\n        this.$root.EmitDown(event, ...data);\n    }\n    /**监听事件 */\n    protected $on(\n        event: string,\n        callback: Function\n    ) {\n        if (!this.$eventRegister[event]) this.$eventRegister[event] = [];\n        this.$eventRegister[event].push(callback);\n        RegisterEvent(event, callback, this);\n    }\n    /**发送一个全局事件 */\n    protected $broadcast(event: string, ...data: any[]) {\n        TriggerEvent(event, data, this);\n    }\n    /**触发该组件的某个事件监听 */\n    $Trigger(event, ...data: any[]) {\n        let cbs = this.$eventRegister[event];\n        if (cbs) {\n            cbs.forEach(cb => cb(...data));\n        }\n    }\n    $ToDom(): (HTMLElement | Text)[] {\n        if (this.$isdirty) {\n            //remount时可能需要\n            let root = this.$Render();\n            this.$root = this.$checkNoVNode(root);\n            this.$isdirty = false;\n        }\n        this.$hasRenderedDom = true;\n        if (!this.$root) this.$DoRender();\n        let doms = this.$root.ToDom();\n        return doms;\n    }\n    $ToHtml(): string {\n        let root = this.$Render();\n        let _root = this.$checkNoVNode(root);\n        return _root.ToHtml();\n    }\n    $GetRoot() {\n        if (!this.$root) this.$DoRender();\n        return this.$root;\n    }\n\n    $SetChildren(children: VNode[]) {\n        this.$children = children;\n    }\n    $GetChildren() {\n        return this.$children;\n    }\n    $Dirty() {\n        if (!this.$isdirty) {\n            this.$isdirty = true;\n            InsertQueue(this);\n        }\n    }\n    $GetDirty() {\n        return this.$isdirty;\n    }\n    $ApplyRefresh() {\n        if (this.$isdirty) {\n            Dev.OnChange(\"update\", [this]);\n            React.ChangeMode('shallow');\n\n            let old = React.target;\n            React.target = this;\n            let _newroot = this.$Render();\n            let newroot = this.$checkNoVNode(_newroot);\n            React.target = old;\n\n            React.ChangeMode('deep');\n            let same = MVVM.$compareVNode(this.$root, newroot);\n            if (same) {\n                this.$useOld(this.$root, newroot);\n            }\n            else {\n                if (this.$hasRenderedDom) {\n                    let doms = newroot.ToDom();\n                    let res = this.$root.GetParent().GetSiblingDom(this.$root);\n                    if (res.isparent) {\n                        (res.dom as HTMLElement).append(...doms);\n                    } else {\n                        doms.forEach(dom => {\n                            res.dom.parentNode.insertBefore(dom, res.dom);\n                        });\n                    }\n                    this.$root.Doms.forEach(dom => {\n                        dom.remove();\n                    });\n                }\n                this.$root.GetParent().isMulti = newroot.isMulti;\n                newroot.SetParent(this.$root.GetParent());\n                this.$root.Destroy();\n                let oldmvvms = this.$root.GetAllMvvm();\n                if (oldmvvms.length > 0)\n                    Dev.OnChange(\"delete\", oldmvvms);\n                this.$root = newroot;\n                if (this.$hasRenderedDom)\n                    newroot.Rendered();\n\n                let newmvvms = newroot.GetAllMvvm();\n                if (newmvvms.length > 0)\n                    Dev.OnChange(\"new\", newmvvms, { isparent: true, id: this.$id });\n            }\n            this.$isdirty = false;\n        }\n    }\n\n    $DoRender() {\n        let keys = [];\n        Object.keys(this).forEach(key => {\n            if (!key.startsWith('$') && this[key] !== this.$props) keys.push(key);\n        });\n        keys.length > 0 && this.$watchObject(this, keys);\n\n        let old = React.target;\n        React.target = this;\n        let root = this.$Render();\n        this.$root = this.$checkNoVNode(root);\n        if (!this.$attachedVNode) {\n            this.$attachedVNode = new VNode(\"custom\");\n            this.$attachedVNode.SetMvvm(this);\n        }\n        this.$attachedVNode.isMulti = this.$root.isMulti;\n        this.$root.SetParent(this.$attachedVNode);\n        React.target = old;\n        return this.$root;\n    }\n    private $watchObject(obj: any, keys?: string[]) {\n        let isNotRef = !(obj instanceof Ref);\n        let isNotVnode = !(obj instanceof VNode);\n        let isNotMvvm = !(obj instanceof MVVM) || keys && keys.length > 0;\n        let isObj = toString.call(obj) == '[object Object]' && isNotRef && isNotVnode && isNotMvvm;\n        let isArr = toString.call(obj) == '[object Array]';\n        if (isObj || isArr) {\n            let watchers: MVVM[] = [];\n            ((keys && keys.length > 0 && keys) || Object.keys(obj)).forEach(key => {\n                let descriptor = Object.getOwnPropertyDescriptor(obj, key);\n                if (descriptor && descriptor.configurable) {\n                    let value = obj[key];\n                    Object.defineProperty(obj, key, {\n                        get: () => {\n                            if (\n                                React.target &&\n                                watchers.indexOf(React.target)\n                            ) {\n                                watchers.push(React.target);\n                            }\n                            return value;\n                        },\n                        set: val => {\n                            if (val != value) {\n                                watchers.forEach(item => item.$Dirty());\n                                value = val;\n\n                                if (toString.call(value) == \"[object Array]\")\n                                    this.$watchArray(value, watchers);\n                                this.$watchObject(value);\n                            }\n                        },\n                        configurable: false,\n                        enumerable: true\n                    });\n                    if (toString.call(value) == \"[object Array]\")\n                        this.$watchArray(value, watchers);\n                    this.$watchObject(value);\n                }\n            });\n            return;\n        }\n    }\n    private $watchArray(arr, watchers: MVVM[]) {\n        let oldproto = Object.getPrototypeOf(arr);\n        if (oldproto && oldproto.$marked == 'noreact') {\n            return;\n        }\n        let proto = this.getArrayProto(arr, watchers);\n        Object.setPrototypeOf(arr, proto);\n        Object.setPrototypeOf(proto, oldproto);\n    }\n    private $useOld(oldNode: VNode, newNode: VNode) {\n        if (oldNode.GetType() == 'custom') {\n            let instance = oldNode.GetMvvm();\n            let newInstance = newNode.GetMvvm();\n            instance.$resetProps(newInstance.$props);\n\n            let samechildren = (instance.$children === newInstance.$children) || instance.$children.length == 0 && newInstance.$children.length == 0;\n            if (!samechildren) {\n                instance.$SetChildren(newInstance.$children);\n                instance.$isdirty = true;\n            }\n            if (instance.$isdirty) {\n                instance.$ApplyRefresh();\n            }\n            return;\n        }\n        if (oldNode.GetType() == 'standard' || oldNode.GetType() == 'fragment') {\n            if (oldNode.GetType() == 'standard')\n                oldNode.ApplyAttrDiff(newNode.GetAttrs());\n            this.$diff(\n                oldNode.GetChildren(),\n                newNode.GetChildren(),\n                oldNode\n            );\n            return;\n        }\n        if (oldNode.GetType() == 'text') {\n            return;\n        }\n    }\n    $IsParentOf(mvvm: MVVM) {\n        let parentNode = mvvm.$attachedVNode.GetParent();\n        while (parentNode) {\n            if (parentNode.GetMvvm() == this) {\n                return true;\n            }\n            parentNode = parentNode.GetParent();\n        }\n        return false;\n    }\n\n    private $diff(olds: VNode[], news: VNode[], parent: VNode) {\n        let opers = Diff(olds, news, MVVM.$compareVNode);\n        let index = 0;\n        opers.forEach(item => {\n            if (item.state == 'old') {\n                index++;\n                this.$useOld(item.oldValue, item.newValue);\n                return;\n            }\n            if (item.state == 'new') {\n                if (item.newValueOrigin) {\n                    this.$useOld(item.newValueOrigin, item.newValue);\n                    parent.InsertVNode(item.newValueOrigin, index, this.$hasRenderedDom);\n                } else {\n                    if (this.$hasRenderedDom) {\n                        item.newValue.ToDom();\n                    }\n                    parent.InsertVNode(item.newValue, index, this.$hasRenderedDom);\n                    this.$devNew(item.newValue, index);\n\n                    if (this.$hasRenderedDom)\n                        item.newValue.Rendered();\n                }\n                index++;\n                return;\n            }\n            if (item.state == 'delete') {\n                parent.RemoveVNode(item.oldValue, index, this.$hasRenderedDom && item.isdeprecated);\n                this.$devDelete(item.oldValue);\n                if (item.isdeprecated) {\n                    item.oldValue.Destroy();\n                }\n                return;\n            }\n            if (item.state == 'replace') {\n                parent.RemoveVNode(item.oldValue, index, this.$hasRenderedDom && item.isdeprecated);\n                this.$devDelete(item.oldValue);\n                if (item.isdeprecated) {\n                    item.oldValue.Destroy();\n                }\n                if (item.newValueOrigin) {\n                    this.$useOld(item.newValueOrigin, item.newValue);\n                    parent.InsertVNode(item.newValueOrigin, index, this.$hasRenderedDom);\n                } else {\n                    if (this.$hasRenderedDom)\n                        item.newValue.ToDom();\n                    parent.InsertVNode(item.newValue, index, this.$hasRenderedDom);\n                    this.$devNew(item.newValue, index);\n                    if (this.$hasRenderedDom)\n                        item.newValue.Rendered();\n                }\n                index++;\n            }\n        });\n    }\n    private $devDelete(vnode: VNode) {\n        let mvvms = vnode.GetAllMvvm();\n        if (mvvms.length > 0) {\n            Dev.OnChange(\"delete\", mvvms);\n        }\n    }\n\n    private $devNew(vnode: VNode, index) {\n        let mvvms = vnode.GetAllMvvm();\n        if (mvvms.length > 0) {\n            let nextmvvm = null;\n            let parent = vnode.GetParent();\n            if (parent.GetChildren().length - 1 > index) {\n                let nextsibling = parent.GetChildren()[index + 1];\n                nextmvvm = nextsibling.GetFirstChildMvvm();\n                if (nextmvvm)\n                    Dev.OnChange(\"new\", mvvms, { isparent: false, id: nextmvvm.$id });\n            }\n            if (!nextmvvm)\n                Dev.OnChange(\"new\", mvvms, { isparent: true, id: parent.GetNearestAncestorMvvm().$id });\n        }\n    }\n    private $resetProps(props) {\n        if (this.$props && Object.prototype.toString.call(this.$props) == \"[object Object]\") {\n            if (props && Object.prototype.toString.call(props) == \"[object Object]\") {\n                let oldkeys = Object.keys(this.$props);\n                let newkeys = Object.keys(props);\n                oldkeys.forEach(key => {\n                    if (newkeys.indexOf(key) != -1) {\n                        this.$setProp(key, props[key]);\n                    } else {\n                        this.$props[key] = undefined;\n                    }\n                });\n                newkeys.forEach(key => {\n                    if (oldkeys.indexOf(key) == -1) {\n                        this.$props[key] = props[key];\n                        this.$watchObject(this.$props, [key]);\n                    }\n                });\n            }\n        }\n    }\n    private $setProp(key, value) {\n        let oldvalue = this.$props[key];\n        if (typeof oldvalue == 'function' && typeof value == 'function') {\n            if (typeof oldvalue.prototype != 'undefined' && typeof value.prototype != 'undefined') {\n                if (typeof oldvalue.toString == 'function' && typeof value.toString == 'function' && oldvalue.toString() == value.toString()) {\n                    return;\n                }\n            }\n            this.$props[key] = value;\n            return;\n        }\n        if (Object.prototype.toString.call(oldvalue) == '[object RegExp]' && Object.prototype.toString.call(value) == '[object RegExp]' && oldvalue.toString() == value.toString()) {\n            return;\n        }\n        this.$props[key] = value;\n    }\n    $checkNoVNode(value: any) {\n        if (value instanceof VNode)\n            return value;\n        if (value && (typeof value.toString == 'function')) {\n            let str = value.toString();\n            let textnode = new VNode(\"text\");\n            textnode.SetText(str);\n            textnode.SetAttr(\"key\", \"$1\");\n            return textnode;\n        }\n        throw new Error(\"$Render function return invalid value\");\n    }\n\n    $Rendered() {\n        this.$isDestroyed = false;\n        this.$root.Rendered();\n        this.$didMounted();\n    }\n    $Destroy() {\n        this.$isDestroyed = true;\n        this.$willUnMount();\n        this.$root.Destroy();\n    }\n    $IsDestroyed() {\n        return this.$isDestroyed;\n    }\n    $AttachVNode(vnode: VNode) {\n        this.$attachedVNode = vnode;\n    }\n    $AppendTo(elem: string | HTMLElement) {\n        let dom: HTMLElement;\n        if (typeof elem == 'string') {\n            dom = document.querySelector(elem);\n        } else {\n            dom = elem;\n        }\n        dom.append(...this.$ToDom());\n        this.$mountDom = dom;\n        this.$Rendered();\n        Dev.AddMvvm(this);\n    }\n    $GetMountDom() {\n        return this.$mountDom;\n    }\n    $GetAttachedVNode() {\n        return this.$attachedVNode;\n    }\n    static $compareVNode(left: VNode, right: VNode) {\n        if (left.GetAttr('key') != right.GetAttr('key')) {\n            return false;\n        }\n        if (left.GetType() != right.GetType()) {\n            return false;\n        }\n        if (left.GetType() == 'custom') {\n            if (\n                left.GetMvvm().constructor !=\n                right.GetMvvm().constructor\n            ) {\n                return false;\n            }\n        }\n        if (left.GetType() == 'standard') {\n            if (left.GetTag() != right.GetTag()) return false;\n        }\n        if (left.GetType() == 'text') {\n            if (left.GetText() != right.GetText()) return false;\n        }\n        return true;\n    }\n    $GetProps() {\n        return this.$props;\n    }\n    private getArrayProto(arr: any[], watchers: MVVM[]) {\n        let oldpush = arr.push;\n        let oldpop = arr.pop;\n        let oldsplice = arr.splice;\n        let oldshift = arr.shift;\n        let oldunshift = arr.unshift;\n        let method = (name, func, args) => {\n            watchers.forEach(item => item.$Dirty());\n            let res = func.apply(arr, Array.prototype.slice.call(args));\n            if (name == \"push\" || name == \"unshift\") {\n                this.$watchObject(arr);\n            }\n            return res;\n        }\n        return {\n            $marked: \"noreact\",\n            push() {\n                return method(\"push\", oldpush, arguments);\n            },\n            pop() {\n                return method(\"pop\", oldpop, arguments)\n            },\n            splice() {\n                return method(\"slice\", oldsplice, arguments)\n            },\n            shift() {\n                return method(\"shift\", oldshift, arguments)\n            },\n            unshift() {\n                return method(\"unshift\", oldunshift, arguments)\n            }\n        }\n    }\n}","import { ApplyAttr, RemoveAttr, SerializeAttr, GetEventAttrName as EventName } from './attribute';\nimport { MVVM } from './MVVM';\nimport { Ref } from './react';\n\nexport class VNode {\n    /**虚拟节点名称，即标准html的标签名 */\n    protected tag: string = '';\n    private text: string = '';\n    /**子节点 */\n    protected children: VNode[] = [];\n    /**属性集合 */\n    private attrs: { [key: string]: any } = {};\n    /**父节点 */\n    private parent: VNode = null;\n\n    /**关联的组件实例，当type='custom'有效 */\n    private mvvm: MVVM;\n    /**关联的实际dom元素 */\n    private dom: (HTMLElement | Text);\n    /**节点类型 */\n    private type: 'standard' | 'custom' | 'text' | 'fragment';\n    /**是否已经被销毁 */\n    private isDestroyed = false;\n    /**是否是多dom节点 */\n    isMulti: boolean = false;\n\n    constructor(type: 'standard' | 'custom' | 'text' | 'fragment') {\n        this.type = type;\n    }\n    get Doms(): (HTMLElement | Text)[] {\n        if (this.type == \"standard\" || this.type == \"text\")\n            return [this.dom];\n        if (this.type == \"fragment\") {\n            let doms = [];\n            this.children.forEach(child => {\n                doms = doms.concat(child.Doms);\n            });\n            return doms;\n        }\n        if (this.type == \"custom\")\n            return this.mvvm.$GetRoot().Doms;\n    }\n    SetTag(tag: string) {\n        this.tag = tag;\n    }\n    GetTag() {\n        return this.tag;\n    }\n    GetText() {\n        return this.text;\n    }\n    SetText(text: string) {\n        this.text = text;\n    }\n    SetMvvm(component: MVVM) {\n        this.mvvm = component;\n    }\n    GetMvvm() {\n        return this.mvvm;\n    }\n    GetParent() {\n        return this.parent;\n    }\n    InsertVNode(child: VNode, index: number, domchange: boolean) {\n        //虚拟dom操作\n        this.children.splice(index, 0, child);\n        child.parent = this;\n        if (domchange) {\n            let res = this.GetSiblingDom(child);\n            let doms = child.Doms;\n            if (res.isparent) {\n                (res.dom as HTMLElement).append(...doms);\n            } else {\n                doms.forEach(dom => {\n                    res.dom.parentNode.insertBefore(dom, res.dom);\n                });\n            }\n        }\n    }\n    //child是当前节点的子节点，获取child的dom，如果没有就找child后的相邻节点的dom，如果都没有就返回父节点\n    GetSiblingDom(child: VNode): { dom: HTMLElement | Text, isparent: boolean } {\n        if (this.type == 'custom') {\n            if (this.parent)\n                return this.parent.GetSiblingDom(this);\n            return { dom: this.mvvm.$GetMountDom(), isparent: true };\n        }\n        let index = this.children.indexOf(child);\n        index++;\n        while (index < this.children.length) {\n            let c = this.children[index];\n            let doms = c.Doms;\n            if (doms.length > 0)\n                return { dom: doms[0], isparent: false };\n            index++;\n        }\n        if (this.isMulti)\n            return this.parent.GetSiblingDom(this);\n        return { dom: this.dom, isparent: true };\n    }\n    /**移除一个孩子节点，注意会引发dom操作 */\n    RemoveVNode(child: VNode, index: number, domchange: boolean = true) {\n        this.children.splice(index, 1);\n        if (domchange) {\n            let doms = child.Doms;\n            if (doms)\n                doms.forEach(dom => {\n                    dom.parentNode.removeChild(dom);\n                });\n        }\n    }\n    SetChildren(children: VNode[]) {\n        children.forEach(child => {\n            child.parent = this;\n        });\n        this.children = children;\n    }\n    IsDestroyed() {\n        return this.isDestroyed;\n    }\n    Destroy() {\n        this.isDestroyed = true;\n        if (this.type == 'custom') {\n            this.mvvm.$Destroy();\n        }\n        this.children.forEach(child => {\n            child.Destroy();\n        });\n    }\n    GetChildren() {\n        return this.children;\n    }\n    /**渲染完毕后的回调 */\n    Rendered() {\n        if (this.type == 'custom') this.mvvm.$Rendered();\n        if (this.type == 'standard' || this.type == 'fragment') {\n            this.children.forEach(child => {\n                child.Rendered();\n            });\n        }\n        if (this.attrs['ref'] instanceof Ref) {\n            if (this.type == \"standard\")\n                this.attrs['ref'].current = (this.dom as HTMLElement);\n            else {\n                if (this.type == \"custom\") {\n                    this.attrs['ref'].current = this.mvvm;\n                }\n            }\n        }\n    }\n\n    GetType() {\n        return this.type;\n    }\n\n    SetAttr(name: string, value: any) {\n        this.attrs[name] = value;\n    }\n    GetAttr(name: string) {\n        return this.attrs[name];\n    }\n    GetAttrs() {\n        return this.attrs;\n    }\n    SetParent(vnode: VNode) {\n        this.parent = vnode;\n    }\n    ApplyAttrDiff(newAttrs: { [key: string]: any }) {\n        Object.keys(this.attrs).forEach(key => {\n            let eventName = EventName(key);\n            let isEvent = eventName != null;\n            if (newAttrs[key] == null) {\n                //删除的属性\n                if (isEvent) {\n                    (this.dom as HTMLElement).removeEventListener(\n                        eventName,\n                        this.attrs[key]\n                    );\n                } else {\n                    RemoveAttr(this.dom as HTMLElement, key, this.attrs[key]);\n                }\n            } else {\n                //已存在的属性\n                if (\n                    key == 'style' &&\n                    toString.call(this.attrs.style) == '[object Object]' &&\n                    toString.call(newAttrs.style) == '[object Object]'\n                ) {\n                    let oldStyle = this.attrs.style;\n                    let newStyle = newAttrs.style;\n\n                    Object.keys(oldStyle).forEach(k => {\n                        if (!newStyle[k]) {\n                            (this.dom as HTMLElement).style[k] = '';\n                        } else {\n                            if (newStyle[k] != oldStyle[k]) {\n                                (this.dom as HTMLElement).style[k] =\n                                    newStyle[k];\n                            }\n                        }\n                    })\n                    Object.keys(newStyle).forEach(k => {\n                        if (!oldStyle[k]) {\n                            (this.dom as HTMLElement).style[k] =\n                                newStyle[k];\n                        }\n                    });\n                    return;\n                }\n                if (isEvent) {\n                    if (this.attrs[key] != newAttrs[key]) {\n                        this.dom.removeEventListener(\n                            eventName,\n                            this.attrs[key]\n                        );\n                        this.dom.addEventListener(\n                            eventName,\n                            newAttrs[key]\n                        );\n                    }\n                } else {\n                    if (this.attrs[key] != newAttrs[key]) {\n                        RemoveAttr(<HTMLElement>this.dom, key, this.attrs[key]);\n                        ApplyAttr(\n                            <HTMLElement>this.dom,\n                            key,\n                            newAttrs[key]\n                        );\n                    }\n                }\n            }\n        });\n        Object.keys(newAttrs).forEach(key => {\n            let eventName = EventName(key);\n            let isEvent = eventName != null;\n            if (this.attrs[key] == null) {\n                //新增属性\n                if (isEvent) {\n                    (this.dom as HTMLElement).addEventListener(\n                        eventName,\n                        newAttrs[key]\n                    );\n                } else {\n                    ApplyAttr(\n                        <HTMLElement>this.dom,\n                        key,\n                        newAttrs[key]\n                    );\n                }\n            }\n        });\n        this.attrs = newAttrs;\n    }\n    ToHtml(): string {\n        if (this.type == 'text') return this.text;\n        if (this.type == 'custom') {\n            let html = this.mvvm.$ToHtml();\n            return html;\n        }\n        if (this.type == 'standard') {\n            let innerhtmls: string[] = [];\n\n            innerhtmls.push(`<${this.tag}`);\n            Object.keys(this.attrs).forEach(key => {\n                let attrStr = SerializeAttr(key, this.attrs[key]);\n                if (attrStr) innerhtmls.push(' ' + attrStr);\n            });\n            innerhtmls.push('>');\n\n            this.children.forEach(child => {\n                let res = child.ToHtml();\n                innerhtmls.push(res);\n            });\n            innerhtmls.push(`</${this.tag}>`);\n            return innerhtmls.join('');\n        }\n        if (this.type == 'fragment') {\n            let innerhtmls: string[] = [];\n\n            this.children.forEach(child => {\n                let res = child.ToHtml();\n                innerhtmls.push(res);\n            });\n            return innerhtmls.join('');\n        }\n    }\n    ToDom(): (HTMLElement | Text)[] {\n        if (this.type == 'custom') {\n            let doms = this.mvvm.$ToDom();\n            return doms;\n        }\n        if (this.type == 'standard') {\n            let elem = document.createElement(this.tag);\n            this.dom = elem;\n            this.children.forEach(child => {\n                let doms = child.ToDom();\n                doms.forEach(dom => elem.appendChild(dom));\n            });\n            Object.keys(this.attrs).forEach(key => {\n                let eventName = EventName(key);\n                if (eventName) {\n                    elem.addEventListener(eventName, this.attrs[key]);\n                } else ApplyAttr(elem, key, this.attrs[key]);\n            });\n            return [elem];\n        }\n        if (this.type == 'fragment') {\n            let children: (HTMLElement | Text)[] = [];\n            this.children.forEach(child => {\n                let doms = child.ToDom();\n                children = children.concat(doms);\n            });\n            return children;\n        }\n        if (this.type == 'text') {\n            let text = document.createTextNode(this.text);\n            this.dom = text;\n            return [text];\n        }\n    }\n    EmitUp(event: string, ...data: any[]) {\n        if (this.parent) {\n            if (this.parent.type == 'custom')\n                this.parent.mvvm.$Trigger(event, ...data);\n            this.parent.EmitUp(event, ...data);\n        }\n    }\n    EmitDown(event: string, ...data: any[]) {\n        this.children.forEach(child => {\n            if (child.type == 'custom') {\n                child.mvvm.$Trigger(event, ...data);\n            }\n            child.EmitDown(event, ...data);\n        });\n    }\n\n    AttachDom(dom: HTMLElement | Text) {\n        this.dom = dom;\n        Object.keys(this.attrs).forEach(key => {\n            let eventName = EventName(key);\n            if (eventName) {\n                dom.addEventListener(eventName, this.attrs[key]);\n            }\n        });\n    }\n    GetNearestAncestorMvvm(): MVVM {\n        if (this.type == \"custom\")\n            return this.mvvm;\n        return this.parent && this.parent.GetNearestAncestorMvvm();\n    }\n    GetFirstChildMvvm(): MVVM {\n        if (this.type == \"custom\")\n            return this.mvvm;\n        for (let child of this.children) {\n            let mvvm = child.GetFirstChildMvvm();\n            if (mvvm)\n                return mvvm;\n        }\n        return null;\n    }\n    GetAllMvvm(): MVVM[] {\n        if (this.type == \"custom\")\n            return [this.mvvm];\n        if (this.type == 'text')\n            return [];\n        if (this.type == \"standard\" || this.type == \"fragment\") {\n            let total = [];\n            this.children.forEach(child => {\n                total = total.concat(child.GetAllMvvm());\n            });\n            return total;\n        }\n        return [];\n    }\n}\n","export const VNODE_ID = '__decorator__';\nlet $isServerRender = false;\nexport function ServerRender(isServerRender: boolean) {\n    $isServerRender = isServerRender;\n}\nconst applyAttr: { [name: string]: (elem: HTMLElement, value: any) => boolean } = {\n    style: (elem, value) => {\n        if (toString.call(value) == '[object Object]') {\n            Object.keys(value).forEach(key => {\n                elem.style[key] = value[key];\n            });\n            return true;\n        }\n        return false;\n    },\n    className: (elem, value) => {\n        if (value instanceof Array) {\n            elem.setAttribute('class', value.join(\" \"));\n        } else\n            elem.setAttribute('class', value);\n        return true;\n    },\n    class: (elem, value) => {\n        if (value instanceof Array) {\n            elem.setAttribute('class', value.join(\" \"));\n        } else\n            elem.setAttribute('class', value);\n        return true;\n    },\n    key: (elem, value) => {\n        return true;\n    },\n    ref: (elem, value) => {\n        return true;\n    },\n    value(elem, value) {\n        if (elem instanceof HTMLInputElement || elem instanceof HTMLSelectElement) {\n            elem.value = value;\n            return true;\n        }\n        return false;\n    },\n    checked(elem, value) {\n        if (elem instanceof HTMLInputElement) {\n            elem.checked = value;\n            return true;\n        }\n        return false;\n    }\n};\nconst removeAttr: { [name: string]: (elem: HTMLElement, value: any) => boolean } = {\n    style: (elem, value) => {\n        if (toString.call(value) == '[object Object]') {\n            Object.keys(value).forEach(key => {\n                elem.style[key] = '';\n            })\n            return true;\n        }\n        return false;\n    },\n    className: (elem, value) => {\n        elem.setAttribute('class', '');\n        return true;\n    },\n    key: (elem, value) => {\n        return true;\n    },\n    value(elem, value) {\n        if (elem instanceof HTMLInputElement) {\n            elem.value = '';\n            return true;\n        }\n        return false;\n    }\n};\nconst serializeAttr: { [name: string]: (value: any) => string } = {\n    style: value => {\n        if (toString.call(value) == '[object Object]') {\n            let str = '';\n            Object.keys(value).forEach(key => {\n                str += `${key}=${value[key]};`;\n            })\n            return `style=\"${str}\"`;\n        } else {\n            return 'style=' + value;\n        }\n    },\n    className: value => {\n        if (value instanceof Array) {\n            value = value.join(\" \");\n        }\n        return 'class=' + value;\n    },\n    key: value => {\n        return '';\n    },\n    ref: value => {\n        return '';\n    },\n    [VNODE_ID]: value => {\n        if ($isServerRender) return VNODE_ID + '=' + value;\n        else return '';\n    }\n};\n/**toHtml方法使用 */\nexport function SerializeAttr(name: string, value: any): string {\n    if (toString.call(value) == '[object Function]') {\n        return '';\n    }\n    if (serializeAttr[name]) {\n        return serializeAttr[name](value);\n    } else {\n        return name + '=' + value;\n    }\n}\n/**toDom方法使用 */\nexport function ApplyAttr(elem: HTMLElement, name: string, value: any) {\n    if (applyAttr[name]) {\n        let res = applyAttr[name](elem, value);\n        if (res)\n            return;\n    }\n    elem.setAttribute(name, value);\n}\nexport function RemoveAttr(elem: HTMLElement, name: string, value: any) {\n    if (removeAttr[name]) {\n        let res = removeAttr[name](elem, value);\n        if (res)\n            return;\n    }\n    elem.setAttribute(name, '');\n}\nexport function GetEventAttrName(attr: string) {\n    if (/^on([A-Z][a-z]+)+$/.test(attr)) {\n        return attr.slice(2).toLowerCase();\n    }\n    return null;\n}\n","import { VNode } from './VNode';\nimport { MVVM } from \"./MVVM\";\n\ninterface Instance {\n    name: string,\n    data: { [key: string]: any };\n    props: { [key: string]: any };\n    children: Instance[];\n}\ntype Listener = ((type: 'new' | 'update' | 'delete', mvvmjson: Instance[], extra?: { isparent: boolean, id: number }) => void);\nclass Dev {\n    roots: MVVM[] = [];\n    listeners: Listener[] = [];\n    Subscribe(listener: Listener, init: (mvvms: Instance[]) => void) {\n        if (this.listeners.indexOf(listener) == -1) {\n            if (this.roots) {\n                init(this.toJson());\n            }\n            this.listeners.push(listener);\n        }\n    }\n    AddMvvm(mvvm: MVVM) {\n        this.roots.push(mvvm);\n        this.listeners.forEach(item => {\n            item(\"new\", this.getMvvm(mvvm.$GetAttachedVNode()));\n        });\n    }\n    Unsubscribe(listener: Listener) {\n        this.listeners = this.listeners.filter(item => item != listener);\n    }\n    toJson() {\n        let mvvms = [];\n        if (this.roots) {\n            this.roots.forEach(root => {\n                mvvms = mvvms.concat(this.getMvvm(root.$GetAttachedVNode()));\n            });\n        }\n        return mvvms;\n    }\n    getMvvm(vnode: VNode): Instance[] {\n        if (vnode.GetType() == 'text')\n            return [];\n        if (vnode.GetType() == \"standard\" || vnode.GetType() == 'fragment') {\n            let children = [];\n            vnode.GetChildren().forEach(child => {\n                children = children.concat(this.getMvvm(child));\n            });\n            return children;\n        }\n        if (vnode.GetType() == \"custom\") {\n            let mvvm = vnode.GetMvvm();\n            let name = mvvm.constructor.name;\n            let data = {};\n            Object.keys(mvvm).forEach(key => {\n                if (!key.startsWith(\"$\") && mvvm[key] !== mvvm.$GetProps() || key == \"$id\") {\n                    data[key] = mvvm[key];\n                }\n            });\n            let vnodeObj = { name: name, data: data, props: vnode.GetMvvm().$GetProps(), children: this.getMvvm(vnode.GetMvvm().$GetRoot()) };\n            return [vnodeObj];\n        }\n        throw new Error(\"vnode type error\");\n    }\n    OnChange(type: 'new' | 'update' | 'delete', mvvms: MVVM[], extra?: { isparent: boolean, id: number }) {\n        let instances: Instance[] = [];\n        mvvms.forEach(mvvm => {\n            let instance: Instance = { name: mvvm.constructor.name, props: mvvm.$GetProps(), data: {}, children: [] };\n            Object.keys(mvvm).forEach(key => {\n                if (!key.startsWith(\"$\") && mvvm[key] !== mvvm.$GetProps() || key == \"$id\") {\n                    instance.data[key] = mvvm[key];\n                }\n            });\n            if (type == \"new\") {\n                instance.children = this.getMvvm(mvvm.$GetRoot());\n            }\n            instances.push(instance);\n        });\n        this.listeners.forEach(listener => {\n            listener(type, instances, extra);\n        });\n    }\n}\nlet dev = new Dev();\n(window as any).__noreact_dev = dev;\nexport default dev;\n","export function Diff<T>(\n    oldset: T[],\n    newset: T[],\n    compare: (left: T, right: T) => boolean\n) {\n    let o2n = {};\n    let n2o = {};\n    let square: SquareUnit[][] = initSquare(oldset, newset);\n    findShortest<T>(square, oldset, newset, compare, o2n, n2o);\n    let opers = getOpers(square, oldset, newset, o2n, n2o);\n    opers.reverse();\n    return opers;\n}\n\nfunction findShortest<T>(\n    square: SquareUnit[][],\n    oldset: T[],\n    newset: T[],\n    compare: (left: T, right: T) => boolean,\n    o2n,\n    n2o\n): number {\n    let target = square[oldset.length][newset.length];\n    if (target.value != -1) return target.value;\n\n    let lastnum = 0;\n    let same = compare(oldset[oldset.length - 1], newset[newset.length - 1]);\n    if (same) {\n        lastnum = 0;\n        o2n[oldset.length - 1] = newset.length - 1;\n        n2o[newset.length - 1] = oldset.length - 1;\n    }\n    else lastnum = 1;\n    let p1 =\n        findShortest(\n            square,\n            oldset.slice(0, oldset.length - 1),\n            newset,\n            compare,\n            o2n,\n            n2o\n        ) + 1;\n    let p2 =\n        findShortest(\n            square,\n            oldset,\n            newset.slice(0, newset.length - 1),\n            compare,\n            o2n,\n            n2o\n        ) + 1;\n    let p3 =\n        findShortest(\n            square,\n            oldset.slice(0, oldset.length - 1),\n            newset.slice(0, newset.length - 1),\n            compare,\n            o2n,\n            n2o\n        ) + lastnum;\n\n    let min = Math.min(p1, p2, p3);\n    target.value = min;\n\n    if (min == p1) {\n        target.fromRow = oldset.length - 1;\n        target.fromColumn = newset.length;\n    } else {\n        if (min == p2) {\n            target.fromRow = oldset.length;\n            target.fromColumn = newset.length - 1;\n        } else {\n            target.fromRow = oldset.length - 1;\n            target.fromColumn = newset.length - 1;\n        }\n    }\n\n    return target.value;\n}\nfunction initSquare<T>(oldset: T[], newset: T[]) {\n    let square: SquareUnit[][] = [];\n    for (let i = 0; i <= oldset.length; i++) {\n        let row = [];\n        for (let j = 0; j <= newset.length; j++) {\n            if (i == 0) {\n                row.push({ value: j, fromRow: 0, fromColumn: j - 1 });\n                continue;\n            }\n            if (j == 0) {\n                row.push({ value: i, fromRow: i - 1, fromColumn: 0 });\n                continue;\n            }\n            row.push({ value: -1, fromRow: -1, fromColumn: -1 });\n        }\n        square.push(row);\n    }\n    return square;\n}\n\ninterface SquareUnit {\n    value: number;\n    fromRow: number;\n    fromColumn: number;\n}\ninterface NextState<T> {\n    oldValue?: T;\n    isdeprecated?: boolean,\n    /**当state为old类型时newValue表示新值 */\n    newValue?: T;\n    newValueOrigin?: T;\n    state: 'new' | 'delete' | 'old' | 'replace';\n}\n\nfunction getOpers<T>(\n    square: SquareUnit[][],\n    oldset: T[],\n    newset: T[],\n    o2n,\n    n2o\n): NextState<T>[] {\n    let column = newset.length;\n    let row = oldset.length;\n\n    let states: NextState<T>[] = [];\n    while (true) {\n        if (row == 0 && column == 0) {\n            break;\n        }\n        let unit = square[row][column];\n        if (unit.fromColumn == column - 1 && unit.fromRow == row - 1) {\n            if (unit.value != square[row - 1][column - 1].value) {\n                states.push({\n                    oldValue: oldset[row - 1],\n                    isdeprecated: o2n[row - 1] == null,\n                    state: 'replace',\n                    newValue: newset[column - 1],\n                    newValueOrigin: oldset[n2o[column - 1]]\n                });\n            } else {\n                states.push({\n                    oldValue: oldset[row - 1],\n                    state: 'old',\n                    newValue: newset[column - 1]\n                });\n            }\n            row--;\n            column--;\n            continue;\n        }\n        if (unit.fromColumn == column && unit.fromRow == row - 1) {\n            states.push({ oldValue: oldset[row - 1], state: 'delete', isdeprecated: o2n[row - 1] == null });\n            row--;\n            continue;\n        }\n        if (unit.fromColumn == column - 1 && unit.fromRow == row) {\n            states.push({ newValue: newset[column - 1], state: 'new', newValueOrigin: oldset[n2o[column - 1]] });\n            column--;\n            continue;\n        }\n    }\n    return states;\n}\n","import { MVVM } from \"./MVVM\"\nlet events: { [name: string]: { cb: Function, mvvm: MVVM }[] } = {};\n\nexport function RegisterEvent(event: string, func: Function, mvvm: MVVM) {\n    if (!events[event]) {\n        events[event] = [];\n    }\n    events[event].push({ cb: func, mvvm: mvvm });\n}\n\nexport function TriggerEvent(event: string, ...args: any[]) {\n    if (events[event]) {\n        events[event] = events[event].filter(item => !item.mvvm.$IsDestroyed());\n        events[event].forEach(item => {\n            item.cb(...args);\n        });\n    }\n}\n","export { MVVM } from './MVVM';\nexport { React, Ref, Fragment } from './react';\nexport { VNode } from './VNode';\nexport { default as Dev } from './dev';","import { VNode } from './VNode';\nimport { MVVM } from './MVVM';\n\nconst isInBrowser = new Function(\n    'try {return this===window;}catch(e){ return false;}'\n);\nclass NoReact {\n    private mode: 'deep' | 'shallow' = 'deep';\n    public target: MVVM;\n    createElement(\n        Elem: string | (typeof MVVM) | (typeof Fragment) | ((props: any) => any),\n        attrs: { [key: string]: any },\n        ...children: (VNode | VNode[] | string)[]\n    ): VNode {\n        let allchildren: VNode[] = [];\n        this.flatten('$', children, allchildren);\n\n        if (typeof Elem == 'string') {\n            let vnode: VNode = new VNode('standard');\n            vnode.SetTag(Elem);\n            vnode.isMulti = false;\n\n            if (attrs != null) {\n                Object.keys(attrs).forEach(key => {\n                    vnode.SetAttr(key, attrs[key]);\n                })\n            }\n            vnode.SetChildren(allchildren);\n            return vnode;\n        }\n        if (Elem == Fragment) {\n            let vnode: VNode = new VNode('fragment');\n            vnode.isMulti = true;\n            vnode.SetChildren(allchildren);\n            if (attrs != null) {\n                Object.keys(attrs).forEach(key => {\n                    vnode.SetAttr(key, attrs[key]);\n                })\n            }\n            return vnode;\n        }\n        if ((Elem as Function).prototype instanceof MVVM) {\n            let vnode = new VNode('custom');\n            let mvvm = new (Elem as any)(attrs) as MVVM;\n\n            vnode.SetMvvm(mvvm);\n            mvvm.$SetChildren(allchildren);\n            mvvm.$AttachVNode(vnode);\n            if (this.mode == 'deep') {\n                let root = mvvm.$DoRender();\n                vnode.isMulti = root.isMulti;\n            }\n\n            if (attrs != null) {\n                Object.keys(attrs).forEach(key => {\n                    vnode.SetAttr(key, attrs[key]);\n                })\n            }\n            return vnode;\n        }\n        if (typeof Elem == \"function\") {\n            let vnode = (Elem as Function)(attrs);\n            return vnode;\n        }\n    }\n\n    private flatten(prefix: string, children: any[], res: VNode[]) {\n        children.forEach((child, index) => {\n            if (child == null) return;\n            if (child instanceof Array) {\n                this.flatten(prefix + index + '_', child, res);\n            } else {\n                if (child instanceof VNode) {\n                    let key = child.GetAttr('key');\n                    if (key != null) {\n                        res.push(child);\n                    } else {\n                        child.SetAttr('key', prefix + index);\n                        res.push(child);\n                    }\n                } else {\n                    let textnode = new VNode('text');\n                    textnode.SetText(child + '');\n                    textnode.SetAttr('key', prefix + index);\n                    res.push(textnode);\n                }\n            }\n        });\n    }\n    ChangeMode(mode: 'shallow' | 'deep') {\n        this.mode = mode;\n    }\n}\nexport class Fragment {\n\n}\nexport class Ref<T> {\n    current: T;\n}\nexport const React = new NoReact();\n\nlet counter = 0;\nexport function GetId() {\n    return counter++;\n}\n","import { MVVM } from './MVVM';\n\nlet queue: MVVM[] = [];\nlet tempQueue: MVVM[] = [];\nlet maxLoop = 10;\nlet counter = 0;\n\nlet promise: Promise<void>;\nexport function InsertQueue(mvvm: MVVM) {\n    if (queue.indexOf(mvvm) != -1) {\n        return;\n    }\n    queue.push(mvvm);\n\n    if (!promise && queue.length > 0) {\n        promise = new Promise((resolve, reject) => {\n            resolve();\n        }).then(() => {\n            tempQueue = queue;\n            queue = [];\n            counter = 0;\n            Refresh();\n            promise = null;\n        });\n    }\n}\nfunction Refresh() {\n    while (true) {\n        tempQueue.sort((m1: MVVM, m2: MVVM) => {\n            if (m1.$IsParentOf(m2)) {\n                return -1;\n            }\n            if (m2.$IsParentOf(m1)) {\n                return 1;\n            }\n            return 0;\n        });\n        if (counter > maxLoop) {\n            throw new Error(\"refresh loop more than \" + maxLoop);\n        }\n        counter++;\n        tempQueue.forEach(root => {\n            if (!root.$IsDestroyed() && root.$GetDirty())\n                root.$ApplyRefresh();\n        });\n        if (queue.length == 0)\n            break;\n        tempQueue = queue;\n        queue = [];\n    }\n}\n"],"sourceRoot":""}