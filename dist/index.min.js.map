{"version":3,"sources":["webpack://noreact/webpack/universalModuleDefinition","webpack://noreact/webpack/bootstrap","webpack://noreact/./src/MVVM.ts","webpack://noreact/./src/VNode.ts","webpack://noreact/./src/attribute.ts","webpack://noreact/./src/dev.ts","webpack://noreact/./src/diff.ts","webpack://noreact/./src/event-center.ts","webpack://noreact/./src/index.ts","webpack://noreact/./src/react.ts","webpack://noreact/./src/refresh.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","diff_1","event_center_1","VNode_1","react_1","refresh_1","dev_1","__importDefault","MVVM","$props","this","$eventRegister","$children","$isdirty","$hasRenderedDom","$mountDom","$isDestroyed","undefined","$watchObject","$id","GetId","$didMounted","$willUnMount","$emitUp","event","data","_i","arguments","length","_a","$root","EmitUp","apply","concat","$emitDown","EmitDown","$on","callback","push","RegisterEvent","$cancel","filter","item","UnregisterEvent","$broadcast","TriggerEvent","$Trigger","cbs","forEach","cb","$ToDom","$Render","$DoRender","ToDom","$ToHtml","ToHtml","$GetRoot","$SetChildren","children","$GetChildren","$Dirty","InsertQueue","$GetDirty","$ApplyRefresh","default","OnChange","React","ChangeMode","old","target","newroot","$compareVNode","$useOld","doms","res_1","GetParent","GetSiblingDom","isparent","dom","append","parentNode","insertBefore","Doms","remove","isMulti","SetParent","Destroy","oldmvvms","GetAllMvvm","Rendered","newmvvms","id","_this","keys","startsWith","$attachedVNode","VNode","SetMvvm","obj","Ref","toString","watchers_1","descriptor","getOwnPropertyDescriptor","configurable","value_1","indexOf","set","val","$watchArray","arr","watchers","$overwriteArrayMethods","methodname","method","oldNode","newNode","GetType","instance","GetMvvm","newInstance","$resetProps","ApplyAttrDiff","GetAttrs","$diff","GetChildren","$IsParentOf","mvvm","olds","news","parent","opers","Diff","index","state","oldValue","newValue","newValueOrigin","InsertVNode","$devNew","RemoveVNode","isdeprecated","$devDelete","vnode","mvvms","nextmvvm","parent_1","GetFirstChildMvvm","GetNearestAncestorMvvm","props","oldkeys_1","newkeys_1","$setProp","oldvalue","$Rendered","$Destroy","$IsDestroyed","$AttachVNode","$AppendTo","elem","document","querySelector","AddMvvm","$GetMountDom","$GetAttachedVNode","left","right","GetAttr","constructor","GetTag","GetText","$GetProps","attribute_1","type","tag","text","attrs","isDestroyed","doms_1","child","SetTag","SetText","component","domchange","splice","removeChild","SetChildren","IsDestroyed","current","SetAttr","newAttrs","eventName","GetEventAttrName","isEvent","removeEventListener","RemoveAttr","style","oldStyle_1","newStyle_1","k","addEventListener","ApplyAttr","innerhtmls_1","attrStr","SerializeAttr","res","join","innerhtmls_2","elem_1","createElement","appendChild","children_1","createTextNode","_b","AttachDom","total_1","VNODE_ID","$isServerRender","ServerRender","isServerRender","applyAttr","className","setAttribute","ref","HTMLInputElement","HTMLSelectElement","checked","removeAttr","serializeAttr","str_1","attr","test","slice","toLowerCase","dev","Dev","roots","listeners","Subscribe","listener","init","toJson","getMvvm","Unsubscribe","mvvm_1","name_1","data_1","Error","extra","instances","__noreact_dev","oldset","newset","compare","o2n","n2o","square","row","j","fromRow","fromColumn","initSquare","findShortest","lastnum","same","p1","p2","p3","min","Math","column","states","unit","getOpers","reverse","events","func","args","MVVM_1","Fragment","NoReact","Function","Elem","allchildren","flatten","vnode_1","vnode_2","vnode_3","prefix","Array","textnode","counter","promise","queue","tempQueue","maxLoop","Promise","resolve","reject","then","sort","m1","m2","Refresh"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"noreact\"] = factory();\n\telse\n\t\troot[\"noreact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Diff } from './diff';\nimport { RegisterEvent, TriggerEvent, UnregisterEvent } from './event-center';\nimport { VNode } from './VNode';\nimport { React, GetId, Ref } from './react';\nimport { InsertQueue } from './refresh';\nimport Dev from \"./dev\";\n\nexport abstract class MVVM {\n    private $root: VNode;\n    private $attachedVNode: VNode;\n    /**组件内部的事件注册中心 */\n    private $eventRegister: { [event: string]: Function[] } = {};\n    /**该组件拥有的子级虚拟树 */\n    protected $children: VNode[] = [];\n    private $isdirty = false;\n    private $props: any;\n    private $hasRenderedDom = false;\n    private $mountDom: HTMLElement = null;\n    private $isDestroyed = false;\n    protected $id: number;\n\n    constructor($props?: any) {\n        if ($props != undefined)\n            this.$props = $props;\n        else\n            this.$props = {};\n        this.$watchObject(this.$props);\n        this.$id = GetId();\n    }\n    /**渲染完成后该方法会被调用，此时elem成员变量才可以被访问到 */\n    protected $didMounted(): void { }\n    /**销毁函数 */\n    protected $willUnMount(): void { }\n    /**该组建的渲染方法，该方法必须返回一个虚拟树 */\n    protected abstract $Render(): VNode;\n\n    /**向所有父级发送消息 */\n    protected $emitUp(event: string, ...data: any[]) {\n        this.$root.EmitUp(event, ...data);\n    }\n    /**向所有子级发送消息 */\n    protected $emitDown(event: string, ...data: any[]) {\n        this.$root.EmitDown(event, ...data);\n    }\n    /**监听事件 */\n    protected $on(\n        event: string,\n        callback: Function\n    ) {\n        if (!this.$eventRegister[event]) this.$eventRegister[event] = [];\n        this.$eventRegister[event].push(callback);\n        RegisterEvent(event, callback);\n    }\n    protected $cancel(event, callback?: Function) {\n        if (!callback) {\n            this.$eventRegister[event] = [];\n        } else {\n            if (this.$eventRegister[event]) {\n                this.$eventRegister[event] = this.$eventRegister[event].filter(item => item !== callback);\n            }\n        }\n        UnregisterEvent(event, callback);\n    }\n    /**发送一个全局事件 */\n    protected $broadcast(event: string, ...data: any[]) {\n        TriggerEvent(event, ...data);\n    }\n    /**触发该组件的某个事件监听 */\n    $Trigger(event, ...data: any[]) {\n        let cbs = this.$eventRegister[event];\n        if (cbs) {\n            cbs.forEach(cb => cb(...data));\n        }\n    }\n    $ToDom(): (HTMLElement | Text)[] {\n        if (this.$isdirty) {\n            //remount时可能需要\n            this.$root = this.$Render();\n            this.$isdirty = false;\n        }\n        this.$hasRenderedDom = true;\n        if (!this.$root) this.$DoRender();\n        let doms = this.$root.ToDom();\n        return doms;\n    }\n    $ToHtml(): string {\n        return this.$Render().ToHtml();\n    }\n    $GetRoot() {\n        if (!this.$root) this.$DoRender();\n        return this.$root;\n    }\n\n    $SetChildren(children: VNode[]) {\n        this.$children = children;\n    }\n    $GetChildren() {\n        return this.$children;\n    }\n    $Dirty() {\n        if (!this.$isdirty) {\n            this.$isdirty = true;\n            InsertQueue(this);\n        }\n    }\n    $GetDirty() {\n        return this.$isdirty;\n    }\n    $ApplyRefresh() {\n        if (this.$isdirty) {\n            Dev.OnChange(\"update\", [this]);\n            React.ChangeMode('shallow');\n\n            let old = React.target;\n            React.target = this;\n            let newroot = this.$Render();\n            React.target = old;\n\n            React.ChangeMode('deep');\n            let same = MVVM.$compareVNode(this.$root, newroot);\n            if (same) {\n                this.$useOld(this.$root, newroot);\n            }\n            else {\n                if (this.$hasRenderedDom) {\n                    let doms = newroot.ToDom();\n                    let res = this.$root.GetParent().GetSiblingDom(this.$root);\n                    if (res.isparent) {\n                        (res.dom as HTMLElement).append(...doms);\n                    } else {\n                        doms.forEach(dom => {\n                            res.dom.parentNode.insertBefore(dom, res.dom);\n                        });\n                    }\n                    this.$root.Doms.forEach(dom => {\n                        dom.remove();\n                    });\n                }\n                this.$root.GetParent().isMulti = newroot.isMulti;\n                newroot.SetParent(this.$root.GetParent());\n                this.$root.Destroy();\n                let oldmvvms = this.$root.GetAllMvvm();\n                if (oldmvvms.length > 0)\n                    Dev.OnChange(\"delete\", oldmvvms);\n                this.$root = newroot;\n                if (this.$hasRenderedDom)\n                    newroot.Rendered();\n\n                let newmvvms = newroot.GetAllMvvm();\n                if (newmvvms.length > 0)\n                    Dev.OnChange(\"new\", newmvvms, { isparent: true, id: this.$id });\n            }\n            this.$isdirty = false;\n        }\n    }\n\n    $DoRender() {\n        let keys = [];\n        Object.keys(this).forEach(key => {\n            if (!key.startsWith('$') && this[key] !== this.$props) keys.push(key);\n        });\n        keys.length > 0 && this.$watchObject(this, keys);\n\n        let old = React.target;\n        React.target = this;\n        this.$root = this.$Render();\n        if (!this.$attachedVNode) {\n            this.$attachedVNode = new VNode(\"custom\");\n            this.$attachedVNode.SetMvvm(this);\n        }\n        this.$attachedVNode.isMulti = this.$root.isMulti;\n        this.$root.SetParent(this.$attachedVNode);\n        React.target = old;\n        return this.$root;\n    }\n    private $watchObject(obj: any, keys?: string[]) {\n        if (!(obj instanceof Ref) && !(obj instanceof VNode) && !(obj instanceof MVVM && (!keys || keys.length == 0)) && toString.call(obj) == '[object Object]' || toString.call(obj) == '[object Array]') {\n            let watchers: MVVM[] = [];\n            ((keys && keys.length > 0 && keys) || Object.keys(obj)).forEach(key => {\n                let descriptor = Object.getOwnPropertyDescriptor(obj, key);\n                if (descriptor && descriptor.configurable) {\n                    let value = obj[key];\n                    Object.defineProperty(obj, key, {\n                        get: () => {\n                            if (\n                                React.target &&\n                                watchers.indexOf(React.target)\n                            ) {\n                                watchers.push(React.target);\n                            }\n                            return value;\n                        },\n                        set: val => {\n                            if (val != value) {\n                                watchers.forEach(item => item.$Dirty());\n                                value = val;\n\n                                if (toString.call(value) == \"[object Array]\")\n                                    this.$watchArray(value, watchers);\n                                this.$watchObject(value);\n                            }\n                        },\n                        configurable: false,\n                        enumerable: true\n                    });\n                    if (toString.call(value) == \"[object Array]\")\n                        this.$watchArray(value, watchers);\n                    this.$watchObject(value);\n                }\n            });\n            return;\n        }\n    }\n    private $watchArray(arr, watchers: MVVM[]) {\n        this.$overwriteArrayMethods(arr, 'pop', watchers);\n        this.$overwriteArrayMethods(arr, 'push', watchers);\n        this.$overwriteArrayMethods(arr, 'splice', watchers);\n        this.$overwriteArrayMethods(arr, 'unshift', watchers);\n        this.$overwriteArrayMethods(arr, 'shift', watchers);\n    }\n    private $overwriteArrayMethods(arr: any[], methodname: string, watchers: MVVM[]) {\n        let method = arr[methodname];\n        if (typeof method == 'function') {\n            let descriptor = Object.getOwnPropertyDescriptor(arr, methodname);\n            if (!descriptor || descriptor.configurable) {\n                Object.defineProperty(arr, methodname, {\n                    value: function () {\n                        watchers.forEach(item => item.$Dirty());\n                        return method.apply(this, arguments);\n                    },\n                    configurable: false\n                });\n            }\n        }\n    }\n    private $useOld(oldNode: VNode, newNode: VNode) {\n        if (oldNode.GetType() == 'custom') {\n            let instance = oldNode.GetMvvm();\n            let newInstance = newNode.GetMvvm();\n            instance.$resetProps(newInstance.$props);\n\n            let samechildren = (instance.$children === newInstance.$children) || instance.$children.length == 0 && newInstance.$children.length == 0;\n            if (!samechildren) {\n                instance.$SetChildren(newInstance.$children);\n                instance.$isdirty = true;\n            }\n            if (instance.$isdirty) {\n                instance.$ApplyRefresh();\n            }\n            return;\n        }\n        if (oldNode.GetType() == 'standard' || oldNode.GetType() == 'fragment') {\n            if (oldNode.GetType() == 'standard')\n                oldNode.ApplyAttrDiff(newNode.GetAttrs());\n            this.$diff(\n                oldNode.GetChildren(),\n                newNode.GetChildren(),\n                oldNode\n            );\n            return;\n        }\n        if (oldNode.GetType() == 'text') {\n            return;\n        }\n    }\n    $IsParentOf(mvvm: MVVM) {\n        let parentNode = mvvm.$attachedVNode.GetParent();\n        while (parentNode) {\n            if (parentNode.GetMvvm() == this) {\n                return true;\n            }\n            parentNode = parentNode.GetParent();\n        }\n        return false;\n    }\n\n    private $diff(olds: VNode[], news: VNode[], parent: VNode) {\n        let opers = Diff(olds, news, MVVM.$compareVNode);\n        let index = 0;\n        opers.forEach(item => {\n            if (item.state == 'old') {\n                index++;\n                this.$useOld(item.oldValue, item.newValue);\n                return;\n            }\n            if (item.state == 'new') {\n                if (item.newValueOrigin) {\n                    this.$useOld(item.newValueOrigin, item.newValue);\n                    parent.InsertVNode(item.newValueOrigin, index, this.$hasRenderedDom);\n                } else {\n                    if (this.$hasRenderedDom) {\n                        item.newValue.ToDom();\n                    }\n                    parent.InsertVNode(item.newValue, index, this.$hasRenderedDom);\n                    this.$devNew(item.newValue, index);\n\n                    if (this.$hasRenderedDom)\n                        item.newValue.Rendered();\n                }\n                index++;\n                return;\n            }\n            if (item.state == 'delete') {\n                parent.RemoveVNode(item.oldValue, index, this.$hasRenderedDom && item.isdeprecated);\n                this.$devDelete(item.oldValue);\n                if (item.isdeprecated) {\n                    item.oldValue.Destroy();\n                }\n                return;\n            }\n            if (item.state == 'replace') {\n                parent.RemoveVNode(item.oldValue, index, this.$hasRenderedDom && item.isdeprecated);\n                this.$devDelete(item.oldValue);\n                if (item.isdeprecated) {\n                    item.oldValue.Destroy();\n                }\n                if (item.newValueOrigin) {\n                    this.$useOld(item.newValueOrigin, item.newValue);\n                    parent.InsertVNode(item.newValueOrigin, index, this.$hasRenderedDom);\n                } else {\n                    if (this.$hasRenderedDom)\n                        item.newValue.ToDom();\n                    parent.InsertVNode(item.newValue, index, this.$hasRenderedDom);\n                    this.$devNew(item.newValue, index);\n                    if (this.$hasRenderedDom)\n                        item.newValue.Rendered();\n                }\n                index++;\n            }\n        });\n    }\n    private $devDelete(vnode: VNode) {\n        let mvvms = vnode.GetAllMvvm();\n        if (mvvms.length > 0) {\n            Dev.OnChange(\"delete\", mvvms);\n        }\n    }\n\n    private $devNew(vnode: VNode, index) {\n        let mvvms = vnode.GetAllMvvm();\n        if (mvvms.length > 0) {\n            let nextmvvm = null;\n            let parent = vnode.GetParent();\n            if (parent.GetChildren().length - 1 > index) {\n                let nextsibling = parent.GetChildren()[index + 1];\n                nextmvvm = nextsibling.GetFirstChildMvvm();\n                if (nextmvvm)\n                    Dev.OnChange(\"new\", mvvms, { isparent: false, id: nextmvvm.$id });\n            }\n            if (!nextmvvm)\n                Dev.OnChange(\"new\", mvvms, { isparent: true, id: parent.GetNearestAncestorMvvm().$id });\n        }\n    }\n    private $resetProps(props) {\n        if (this.$props && Object.prototype.toString.call(this.$props) == \"[object Object]\") {\n            if (props && Object.prototype.toString.call(props) == \"[object Object]\") {\n                let oldkeys = Object.keys(this.$props);\n                let newkeys = Object.keys(props);\n                oldkeys.forEach(key => {\n                    if (newkeys.indexOf(key) != -1) {\n                        this.$setProp(key, props[key]);\n                    } else {\n                        this.$props[key] = undefined;\n                    }\n                });\n                newkeys.forEach(key => {\n                    if (oldkeys.indexOf(key) == -1) {\n                        this.$props[key] = props[key];\n                        this.$watchObject(this.$props, [key]);\n                    }\n                });\n            }\n        }\n    }\n    private $setProp(key, value) {\n        let oldvalue = this.$props[key];\n        if (typeof oldvalue == 'function' && typeof value == 'function') {\n            if (typeof oldvalue.prototype != 'undefined' && typeof value.prototype != 'undefined') {\n                if (typeof oldvalue.toString == 'function' && typeof value.toString == 'function' && oldvalue.toString() == value.toString()) {\n                    return;\n                }\n            }\n            this.$props[key] = value;\n            return;\n        }\n        if (Object.prototype.toString.call(oldvalue) == '[object RegExp]' && Object.prototype.toString.call(value) == '[object RegExp]' && oldvalue.toString() == value.toString()) {\n            return;\n        }\n        this.$props[key] = value;\n    }\n\n    $Rendered() {\n        this.$isDestroyed = false;\n        this.$root.Rendered();\n        this.$didMounted();\n    }\n    $Destroy() {\n        this.$isDestroyed = true;\n        this.$willUnMount();\n        this.$root.Destroy();\n    }\n    $IsDestroyed() {\n        return this.$isDestroyed;\n    }\n    $AttachVNode(vnode: VNode) {\n        this.$attachedVNode = vnode;\n    }\n    $AppendTo(elem: string | HTMLElement) {\n        let dom: HTMLElement;\n        if (typeof elem == 'string') {\n            dom = document.querySelector(elem);\n        } else {\n            dom = elem;\n        }\n        dom.append(...this.$ToDom());\n        this.$mountDom = dom;\n        this.$Rendered();\n        Dev.AddMvvm(this);\n    }\n    $GetMountDom() {\n        return this.$mountDom;\n    }\n    $GetAttachedVNode() {\n        return this.$attachedVNode;\n    }\n    static $compareVNode(left: VNode, right: VNode) {\n        if (left.GetAttr('key') != right.GetAttr('key')) {\n            return false;\n        }\n        if (left.GetType() != right.GetType()) {\n            return false;\n        }\n        if (left.GetType() == 'custom') {\n            if (\n                left.GetMvvm().constructor !=\n                right.GetMvvm().constructor\n            ) {\n                return false;\n            }\n        }\n        if (left.GetType() == 'standard') {\n            if (left.GetTag() != right.GetTag()) return false;\n        }\n        if (left.GetType() == 'text') {\n            if (left.GetText() != right.GetText()) return false;\n        }\n        return true;\n    }\n    $GetProps() {\n        return this.$props;\n    }\n}\n","import { ApplyAttr, RemoveAttr, SerializeAttr, GetEventAttrName as EventName } from './attribute';\nimport { MVVM } from './MVVM';\nimport { Ref } from './react';\n\nexport class VNode {\n    /**虚拟节点名称，即标准html的标签名 */\n    protected tag: string = '';\n    private text: string = '';\n    /**子节点 */\n    protected children: VNode[] = [];\n    /**属性集合 */\n    private attrs: { [key: string]: any } = {};\n    /**父节点 */\n    private parent: VNode = null;\n\n    /**关联的组件实例，当type='custom'有效 */\n    private mvvm: MVVM;\n    /**关联的实际dom元素 */\n    private dom: (HTMLElement | Text);\n    /**节点类型 */\n    private type: 'standard' | 'custom' | 'text' | 'fragment';\n    /**是否已经被销毁 */\n    private isDestroyed = false;\n    /**是否是多dom节点 */\n    isMulti: boolean = false;\n\n    constructor(type: 'standard' | 'custom' | 'text' | 'fragment') {\n        this.type = type;\n    }\n    get Doms(): (HTMLElement | Text)[] {\n        if (this.type == \"standard\" || this.type == \"text\")\n            return [this.dom];\n        if (this.type == \"fragment\") {\n            let doms = [];\n            this.children.forEach(child => {\n                doms = doms.concat(child.Doms);\n            });\n            return doms;\n        }\n        if (this.type == \"custom\")\n            return this.mvvm.$GetRoot().Doms;\n    }\n    SetTag(tag: string) {\n        this.tag = tag;\n    }\n    GetTag() {\n        return this.tag;\n    }\n    GetText() {\n        return this.text;\n    }\n    SetText(text: string) {\n        this.text = text;\n    }\n    SetMvvm(component: MVVM) {\n        this.mvvm = component;\n    }\n    GetMvvm() {\n        return this.mvvm;\n    }\n    GetParent() {\n        return this.parent;\n    }\n    InsertVNode(child: VNode, index: number, domchange: boolean) {\n        //虚拟dom操作\n        this.children.splice(index, 0, child);\n        child.parent = this;\n        if (domchange) {\n            let res = this.GetSiblingDom(child);\n            let doms = child.Doms;\n            if (res.isparent) {\n                (res.dom as HTMLElement).append(...doms);\n            } else {\n                doms.forEach(dom => {\n                    res.dom.parentNode.insertBefore(dom, res.dom);\n                });\n            }\n        }\n    }\n    //child是当前节点的子节点，获取child的dom，如果没有就找child后的相邻节点的dom，如果都没有就返回父节点\n    GetSiblingDom(child: VNode): { dom: HTMLElement | Text, isparent: boolean } {\n        if (this.type == 'custom') {\n            if (this.parent)\n                return this.parent.GetSiblingDom(this);\n            return { dom: this.mvvm.$GetMountDom(), isparent: true };\n        }\n        let index = this.children.indexOf(child);\n        index++;\n        while (index < this.children.length) {\n            let c = this.children[index];\n            let doms = c.Doms;\n            if (doms.length > 0)\n                return { dom: doms[0], isparent: false };\n            index++;\n        }\n        if (this.isMulti)\n            return this.parent.GetSiblingDom(this);\n        return { dom: this.dom, isparent: true };\n    }\n    /**移除一个孩子节点，注意会引发dom操作 */\n    RemoveVNode(child: VNode, index: number, domchange: boolean = true) {\n        this.children.splice(index, 1);\n        if (domchange) {\n            let doms = child.Doms;\n            if (doms)\n                doms.forEach(dom => {\n                    dom.parentNode.removeChild(dom);\n                });\n        }\n    }\n    SetChildren(children: VNode[]) {\n        children.forEach(child => {\n            child.parent = this;\n        });\n        this.children = children;\n    }\n    IsDestroyed() {\n        return this.isDestroyed;\n    }\n    Destroy() {\n        this.isDestroyed = true;\n        if (this.type == 'custom') {\n            this.mvvm.$Destroy();\n        }\n        this.children.forEach(child => {\n            child.Destroy();\n        });\n    }\n    GetChildren() {\n        return this.children;\n    }\n    /**渲染完毕后的回调 */\n    Rendered() {\n        if (this.type == 'custom') this.mvvm.$Rendered();\n        if (this.type == 'standard' || this.type == 'fragment') {\n            this.children.forEach(child => {\n                child.Rendered();\n            });\n        }\n        if (this.attrs['ref'] instanceof Ref) {\n            if (this.type == \"standard\")\n                this.attrs['ref'].current = (this.dom as HTMLElement);\n            else {\n                if (this.type == \"custom\") {\n                    this.attrs['ref'].current = this.mvvm;\n                }\n            }\n        }\n    }\n\n    GetType() {\n        return this.type;\n    }\n\n    SetAttr(name: string, value: any) {\n        this.attrs[name] = value;\n    }\n    GetAttr(name: string) {\n        return this.attrs[name];\n    }\n    GetAttrs() {\n        return this.attrs;\n    }\n    SetParent(vnode: VNode) {\n        this.parent = vnode;\n    }\n    ApplyAttrDiff(newAttrs: { [key: string]: any }) {\n        Object.keys(this.attrs).forEach(key => {\n            let eventName = EventName(key);\n            let isEvent = eventName != null;\n            if (newAttrs[key] == null) {\n                //删除的属性\n                if (isEvent) {\n                    (this.dom as HTMLElement).removeEventListener(\n                        eventName,\n                        this.attrs[key]\n                    );\n                } else {\n                    RemoveAttr(this.dom as HTMLElement, key, this.attrs[key]);\n                }\n            } else {\n                //已存在的属性\n                if (\n                    key == 'style' &&\n                    toString.call(this.attrs.style) == '[object Object]' &&\n                    toString.call(newAttrs.style) == '[object Object]'\n                ) {\n                    let oldStyle = this.attrs.style;\n                    let newStyle = newAttrs.style;\n\n                    Object.keys(oldStyle).forEach(k => {\n                        if (!newStyle[k]) {\n                            (this.dom as HTMLElement).style[k] = '';\n                        } else {\n                            if (newStyle[k] != oldStyle[k]) {\n                                (this.dom as HTMLElement).style[k] =\n                                    newStyle[k];\n                            }\n                        }\n                    })\n                    Object.keys(newStyle).forEach(k => {\n                        if (!oldStyle[k]) {\n                            (this.dom as HTMLElement).style[k] =\n                                newStyle[k];\n                        }\n                    });\n                    return;\n                }\n                if (isEvent) {\n                    if (this.attrs[key] != newAttrs[key]) {\n                        this.dom.removeEventListener(\n                            eventName,\n                            this.attrs[key]\n                        );\n                        this.dom.addEventListener(\n                            eventName,\n                            newAttrs[key]\n                        );\n                    }\n                } else {\n                    if (this.attrs[key] != newAttrs[key]) {\n                        RemoveAttr(<HTMLElement>this.dom, key, this.attrs[key]);\n                        ApplyAttr(\n                            <HTMLElement>this.dom,\n                            key,\n                            newAttrs[key]\n                        );\n                    }\n                }\n            }\n        });\n        Object.keys(newAttrs).forEach(key => {\n            let eventName = EventName(key);\n            let isEvent = eventName != null;\n            if (this.attrs[key] == null) {\n                //新增属性\n                if (isEvent) {\n                    (this.dom as HTMLElement).addEventListener(\n                        eventName,\n                        newAttrs[key]\n                    );\n                } else {\n                    ApplyAttr(\n                        <HTMLElement>this.dom,\n                        key,\n                        newAttrs[key]\n                    );\n                }\n            }\n        });\n        this.attrs = newAttrs;\n    }\n    ToHtml(): string {\n        if (this.type == 'text') return this.text;\n        if (this.type == 'custom') {\n            let html = this.mvvm.$ToHtml();\n            return html;\n        }\n        if (this.type == 'standard') {\n            let innerhtmls: string[] = [];\n\n            innerhtmls.push(`<${this.tag}`);\n            Object.keys(this.attrs).forEach(key => {\n                let attrStr = SerializeAttr(key, this.attrs[key]);\n                if (attrStr) innerhtmls.push(' ' + attrStr);\n            });\n            innerhtmls.push('>');\n\n            this.children.forEach(child => {\n                let res = child.ToHtml();\n                innerhtmls.push(res);\n            });\n            innerhtmls.push(`</${this.tag}>`);\n            return innerhtmls.join('');\n        }\n        if (this.type == 'fragment') {\n            let innerhtmls: string[] = [];\n\n            this.children.forEach(child => {\n                let res = child.ToHtml();\n                innerhtmls.push(res);\n            });\n            return innerhtmls.join('');\n        }\n    }\n    ToDom(): (HTMLElement | Text)[] {\n        if (this.type == 'custom') {\n            let doms = this.mvvm.$ToDom();\n            return doms;\n        }\n        if (this.type == 'standard') {\n            let elem = document.createElement(this.tag);\n            this.dom = elem;\n            Object.keys(this.attrs).forEach(key => {\n                let eventName = EventName(key);\n                if (eventName) {\n                    elem.addEventListener(eventName, this.attrs[key]);\n                } else ApplyAttr(elem, key, this.attrs[key]);\n            });\n            this.children.forEach(child => {\n                let doms = child.ToDom();\n                doms.forEach(dom => elem.appendChild(dom));\n            });\n            return [elem];\n        }\n        if (this.type == 'fragment') {\n            let children: (HTMLElement | Text)[] = [];\n            this.children.forEach(child => {\n                let doms = child.ToDom();\n                children = children.concat(doms);\n            });\n            return children;\n        }\n        if (this.type == 'text') {\n            let text = document.createTextNode(this.text);\n            this.dom = text;\n            return [text];\n        }\n    }\n    EmitUp(event: string, ...data: any[]) {\n        if (this.parent) {\n            if (this.parent.type == 'custom')\n                this.parent.mvvm.$Trigger(event, ...data);\n            this.parent.EmitUp(event, ...data);\n        }\n    }\n    EmitDown(event: string, ...data: any[]) {\n        this.children.forEach(child => {\n            if (child.type == 'custom') {\n                child.mvvm.$Trigger(event, ...data);\n            }\n            child.EmitDown(event, ...data);\n        });\n    }\n\n    AttachDom(dom: HTMLElement | Text) {\n        this.dom = dom;\n        Object.keys(this.attrs).forEach(key => {\n            let eventName = EventName(key);\n            if (eventName) {\n                dom.addEventListener(eventName, this.attrs[key]);\n            }\n        });\n    }\n    GetNearestAncestorMvvm(): MVVM {\n        if (this.type == \"custom\")\n            return this.mvvm;\n        return this.parent && this.parent.GetNearestAncestorMvvm();\n    }\n    GetFirstChildMvvm(): MVVM {\n        if (this.type == \"custom\")\n            return this.mvvm;\n        for (let child of this.children) {\n            let mvvm = child.GetFirstChildMvvm();\n            if (mvvm)\n                return mvvm;\n        }\n        return null;\n    }\n    GetAllMvvm(): MVVM[] {\n        if (this.type == \"custom\")\n            return [this.mvvm];\n        if (this.type == 'text')\n            return [];\n        if (this.type == \"standard\" || this.type == \"fragment\") {\n            let total = [];\n            this.children.forEach(child => {\n                total = total.concat(child.GetAllMvvm());\n            });\n            return total;\n        }\n        return [];\n    }\n}\n","export const VNODE_ID = '__decorator__';\nlet $isServerRender = false;\nexport function ServerRender(isServerRender: boolean) {\n    $isServerRender = isServerRender;\n}\nconst applyAttr: { [name: string]: (elem: HTMLElement, value: any) => boolean } = {\n    style: (elem, value) => {\n        if (toString.call(value) == '[object Object]') {\n            Object.keys(value).forEach(key => {\n                elem.style[key] = value[key];\n            });\n            return true;\n        }\n        return false;\n    },\n    className: (elem, value) => {\n        elem.setAttribute('class', value);\n        return true;\n    },\n    key: (elem, value) => {\n        return true;\n    },\n    ref: (elem, value) => {\n        return true;\n    },\n    value(elem, value) {\n        if (elem instanceof HTMLInputElement || elem instanceof HTMLSelectElement) {\n            elem.value = value;\n            return true;\n        }\n        return false;\n    },\n    checked(elem, value) {\n        if (elem instanceof HTMLInputElement) {\n            elem.checked = value;\n            return true;\n        }\n        return false;\n    }\n};\nconst removeAttr: { [name: string]: (elem: HTMLElement, value: any) => boolean } = {\n    style: (elem, value) => {\n        if (toString.call(value) == '[object Object]') {\n            Object.keys(value).forEach(key => {\n                elem.style[key] = '';\n            })\n            return true;\n        }\n        return false;\n    },\n    className: (elem, value) => {\n        elem.setAttribute('class', '');\n        return true;\n    },\n    key: (elem, value) => {\n        return true;\n    },\n    value(elem, value) {\n        if (elem instanceof HTMLInputElement) {\n            elem.value = '';\n            return true;\n        }\n        return false;\n    }\n};\nconst serializeAttr: { [name: string]: (value: any) => string } = {\n    style: value => {\n        if (toString.call(value) == '[object Object]') {\n            let str = '';\n            Object.keys(value).forEach(key => {\n                str += `${key}=${value[key]};`;\n            })\n            return `style=\"${str}\"`;\n        } else {\n            return 'style=' + value;\n        }\n    },\n    className: value => {\n        return 'class=' + value;\n    },\n    key: value => {\n        return '';\n    },\n    ref: value => {\n        return '';\n    },\n    [VNODE_ID]: value => {\n        if ($isServerRender) return VNODE_ID + '=' + value;\n        else return '';\n    }\n};\n/**toHtml方法使用 */\nexport function SerializeAttr(name: string, value: any): string {\n    if (toString.call(value) == '[object Function]') {\n        return '';\n    }\n    if (serializeAttr[name]) {\n        return serializeAttr[name](value);\n    } else {\n        return name + '=' + value;\n    }\n}\n/**toDom方法使用 */\nexport function ApplyAttr(elem: HTMLElement, name: string, value: any) {\n    if (applyAttr[name]) {\n        let res = applyAttr[name](elem, value);\n        if (res)\n            return;\n    }\n    elem.setAttribute(name, value);\n}\nexport function RemoveAttr(elem: HTMLElement, name: string, value: any) {\n    if (removeAttr[name]) {\n        let res = removeAttr[name](elem, value);\n        if (res)\n            return;\n    }\n    elem.setAttribute(name, '');\n}\nexport function GetEventAttrName(attr: string) {\n    if (/^on([A-Z][a-z]+)+$/.test(attr)) {\n        return attr.slice(2).toLowerCase();\n    }\n    return null;\n}\n","import { VNode } from './VNode';\nimport { MVVM } from \"./MVVM\";\n\ninterface Instance {\n    name: string,\n    data: { [key: string]: any };\n    props: { [key: string]: any };\n    children: Instance[];\n}\ntype Listener = ((type: 'new' | 'update' | 'delete', mvvmjson: Instance[], extra?: { isparent: boolean, id: number }) => void);\nclass Dev {\n    roots: MVVM[] = [];\n    listeners: Listener[] = [];\n    Subscribe(listener: Listener, init: (mvvms: Instance[]) => void) {\n        if (this.listeners.indexOf(listener) == -1) {\n            if (this.roots) {\n                init(this.toJson());\n            }\n            this.listeners.push(listener);\n        }\n    }\n    AddMvvm(mvvm: MVVM) {\n        this.roots.push(mvvm);\n        this.listeners.forEach(item => {\n            item(\"new\", this.getMvvm(mvvm.$GetAttachedVNode()));\n        });\n    }\n    Unsubscribe(listener: Listener) {\n        this.listeners = this.listeners.filter(item => item != listener);\n    }\n    toJson() {\n        let mvvms = [];\n        if (this.roots) {\n            this.roots.forEach(root => {\n                mvvms = mvvms.concat(this.getMvvm(root.$GetAttachedVNode()));\n            });\n        }\n        return mvvms;\n    }\n    getMvvm(vnode: VNode): Instance[] {\n        if (vnode.GetType() == 'text')\n            return [];\n        if (vnode.GetType() == \"standard\" || vnode.GetType() == 'fragment') {\n            let children = [];\n            vnode.GetChildren().forEach(child => {\n                children = children.concat(this.getMvvm(child));\n            });\n            return children;\n        }\n        if (vnode.GetType() == \"custom\") {\n            let mvvm = vnode.GetMvvm();\n            let name = mvvm.constructor.name;\n            let data = {};\n            Object.keys(mvvm).forEach(key => {\n                if (!key.startsWith(\"$\") && mvvm[key] !== mvvm.$GetProps() || key == \"$id\") {\n                    data[key] = mvvm[key];\n                }\n            });\n            let vnodeObj = { name: name, data: data, props: vnode.GetMvvm().$GetProps(), children: this.getMvvm(vnode.GetMvvm().$GetRoot()) };\n            return [vnodeObj];\n        }\n        throw new Error(\"vnode type error\");\n    }\n    OnChange(type: 'new' | 'update' | 'delete', mvvms: MVVM[], extra?: { isparent: boolean, id: number }) {\n        let instances: Instance[] = [];\n        mvvms.forEach(mvvm => {\n            let instance: Instance = { name: mvvm.constructor.name, props: mvvm.$GetProps(), data: {}, children: [] };\n            Object.keys(mvvm).forEach(key => {\n                if (!key.startsWith(\"$\") && mvvm[key] !== mvvm.$GetProps() || key == \"$id\") {\n                    instance.data[key] = mvvm[key];\n                }\n            });\n            if (type == \"new\") {\n                instance.children = this.getMvvm(mvvm.$GetRoot());\n            }\n            instances.push(instance);\n        });\n        this.listeners.forEach(listener => {\n            listener(type, instances, extra);\n        });\n    }\n}\nlet dev = new Dev();\n(window as any).__noreact_dev = dev;\nexport default dev;\n","export function Diff<T>(\n    oldset: T[],\n    newset: T[],\n    compare: (left: T, right: T) => boolean\n) {\n    let o2n = {};\n    let n2o = {};\n    let square: SquareUnit[][] = initSquare(oldset, newset);\n    findShortest<T>(square, oldset, newset, compare, o2n, n2o);\n    let opers = getOpers(square, oldset, newset, o2n, n2o);\n    opers.reverse();\n    return opers;\n}\n\nfunction findShortest<T>(\n    square: SquareUnit[][],\n    oldset: T[],\n    newset: T[],\n    compare: (left: T, right: T) => boolean,\n    o2n,\n    n2o\n): number {\n    let target = square[oldset.length][newset.length];\n    if (target.value != -1) return target.value;\n\n    let lastnum = 0;\n    let same = compare(oldset[oldset.length - 1], newset[newset.length - 1]);\n    if (same) {\n        lastnum = 0;\n        o2n[oldset.length - 1] = newset.length - 1;\n        n2o[newset.length - 1] = oldset.length - 1;\n    }\n    else lastnum = 1;\n    let p1 =\n        findShortest(\n            square,\n            oldset.slice(0, oldset.length - 1),\n            newset,\n            compare,\n            o2n,\n            n2o\n        ) + 1;\n    let p2 =\n        findShortest(\n            square,\n            oldset,\n            newset.slice(0, newset.length - 1),\n            compare,\n            o2n,\n            n2o\n        ) + 1;\n    let p3 =\n        findShortest(\n            square,\n            oldset.slice(0, oldset.length - 1),\n            newset.slice(0, newset.length - 1),\n            compare,\n            o2n,\n            n2o\n        ) + lastnum;\n\n    let min = Math.min(p1, p2, p3);\n    target.value = min;\n\n    if (min == p1) {\n        target.fromRow = oldset.length - 1;\n        target.fromColumn = newset.length;\n    } else {\n        if (min == p2) {\n            target.fromRow = oldset.length;\n            target.fromColumn = newset.length - 1;\n        } else {\n            target.fromRow = oldset.length - 1;\n            target.fromColumn = newset.length - 1;\n        }\n    }\n\n    return target.value;\n}\nfunction initSquare<T>(oldset: T[], newset: T[]) {\n    let square: SquareUnit[][] = [];\n    for (let i = 0; i <= oldset.length; i++) {\n        let row = [];\n        for (let j = 0; j <= newset.length; j++) {\n            if (i == 0) {\n                row.push({ value: j, fromRow: 0, fromColumn: j - 1 });\n                continue;\n            }\n            if (j == 0) {\n                row.push({ value: i, fromRow: i - 1, fromColumn: 0 });\n                continue;\n            }\n            row.push({ value: -1, fromRow: -1, fromColumn: -1 });\n        }\n        square.push(row);\n    }\n    return square;\n}\n\ninterface SquareUnit {\n    value: number;\n    fromRow: number;\n    fromColumn: number;\n}\ninterface NextState<T> {\n    oldValue?: T;\n    isdeprecated?: boolean,\n    /**当state为old类型时newValue表示新值 */\n    newValue?: T;\n    newValueOrigin?: T;\n    state: 'new' | 'delete' | 'old' | 'replace';\n}\n\nfunction getOpers<T>(\n    square: SquareUnit[][],\n    oldset: T[],\n    newset: T[],\n    o2n,\n    n2o\n): NextState<T>[] {\n    let column = newset.length;\n    let row = oldset.length;\n\n    let states: NextState<T>[] = [];\n    while (true) {\n        if (row == 0 && column == 0) {\n            break;\n        }\n        let unit = square[row][column];\n        if (unit.fromColumn == column - 1 && unit.fromRow == row - 1) {\n            if (unit.value != square[row - 1][column - 1].value) {\n                states.push({\n                    oldValue: oldset[row - 1],\n                    isdeprecated: o2n[row - 1] == null,\n                    state: 'replace',\n                    newValue: newset[column - 1],\n                    newValueOrigin: oldset[n2o[column - 1]]\n                });\n            } else {\n                states.push({\n                    oldValue: oldset[row - 1],\n                    state: 'old',\n                    newValue: newset[column - 1]\n                });\n            }\n            row--;\n            column--;\n            continue;\n        }\n        if (unit.fromColumn == column && unit.fromRow == row - 1) {\n            states.push({ oldValue: oldset[row - 1], state: 'delete', isdeprecated: o2n[row - 1] == null });\n            row--;\n            continue;\n        }\n        if (unit.fromColumn == column - 1 && unit.fromRow == row) {\n            states.push({ newValue: newset[column - 1], state: 'new', newValueOrigin: oldset[n2o[column - 1]] });\n            column--;\n            continue;\n        }\n    }\n    return states;\n}\n","let events: { [name: string]: Function[] } = {};\n\nexport function RegisterEvent(event: string, func: Function) {\n    if (!events[event]) {\n        events[event] = [];\n    }\n    events[event].push(func);\n}\nexport function UnregisterEvent(event: string, func?: Function) {\n    if (!func) {\n        events[event] = [];\n    } else {\n        if (events[event]) {\n            events[event] = events[event].filter(item => item !== func);\n        }\n    }\n}\nexport function TriggerEvent(event: string, ...args: any[]) {\n    if (events[event]) {\n        events[event].forEach(func => {\n            func(...args);\n        });\n    }\n}\n","export { MVVM } from './MVVM';\nexport { React, Ref, Fragment } from './react';\nexport { VNode } from './VNode';\nexport { default as Dev } from './dev';","import { VNode } from './VNode';\nimport { MVVM } from './MVVM';\n\nconst isInBrowser = new Function(\n    'try {return this===window;}catch(e){ return false;}'\n);\nclass NoReact {\n    private mode: 'deep' | 'shallow' = 'deep';\n    public target: MVVM;\n    createElement(\n        Elem: string | (typeof MVVM) | typeof Fragment,\n        attrs: { [key: string]: any },\n        ...children: (VNode | VNode[] | string)[]\n    ): VNode {\n        let allchildren: VNode[] = [];\n        this.flatten('$', children, allchildren);\n\n        if (typeof Elem == 'string') {\n            let vnode: VNode = new VNode('standard');\n            vnode.SetTag(Elem);\n            vnode.isMulti = false;\n\n            if (attrs != null) {\n                Object.keys(attrs).forEach(key => {\n                    vnode.SetAttr(key, attrs[key]);\n                })\n            }\n            vnode.SetChildren(allchildren);\n            return vnode;\n        }\n        if (Elem == Fragment) {\n            let vnode: VNode = new VNode('fragment');\n            vnode.isMulti = true;\n            vnode.SetChildren(allchildren);\n            if (attrs != null) {\n                Object.keys(attrs).forEach(key => {\n                    vnode.SetAttr(key, attrs[key]);\n                })\n            }\n            return vnode;\n        }\n        if ((Elem as Function).prototype instanceof MVVM) {\n            let vnode = new VNode('custom');\n            let mvvm = new (Elem as any)(attrs) as MVVM;\n\n            vnode.SetMvvm(mvvm);\n            mvvm.$SetChildren(allchildren);\n            mvvm.$AttachVNode(vnode);\n            if (this.mode == 'deep') {\n                let root = mvvm.$DoRender();\n                vnode.isMulti = root.isMulti;\n            }\n\n            if (attrs != null) {\n                Object.keys(attrs).forEach(key => {\n                    vnode.SetAttr(key, attrs[key]);\n                })\n            }\n            return vnode;\n        }\n    }\n\n    private flatten(prefix: string, children: any[], res: VNode[]) {\n        children.forEach((child, index) => {\n            if (child == null) return;\n            if (child instanceof Array) {\n                this.flatten(prefix + index + '_', child, res);\n            } else {\n                if (child instanceof VNode) {\n                    let key = child.GetAttr('key');\n                    if (key != null) {\n                        res.push(child);\n                    } else {\n                        child.SetAttr('key', prefix + index);\n                        res.push(child);\n                    }\n                } else {\n                    let textnode = new VNode('text');\n                    textnode.SetText(child + '');\n                    textnode.SetAttr('key', prefix + index);\n                    res.push(textnode);\n                }\n            }\n        });\n    }\n    ChangeMode(mode: 'shallow' | 'deep') {\n        this.mode = mode;\n    }\n}\nexport class Fragment {\n\n}\nexport class Ref<T> {\n    current: T;\n}\nexport const React = new NoReact();\n\nlet counter = 0;\nexport function GetId() {\n    return counter++;\n}\n","import { MVVM } from './MVVM';\n\nlet queue: MVVM[] = [];\nlet tempQueue: MVVM[] = [];\nlet maxLoop = 10;\nlet counter = 0;\n\nlet promise: Promise<void>;\nexport function InsertQueue(mvvm: MVVM) {\n    if (queue.indexOf(mvvm) != -1) {\n        return;\n    }\n    queue.push(mvvm);\n\n    if (!promise && queue.length > 0) {\n        promise = new Promise((resolve, reject) => {\n            resolve();\n        }).then(() => {\n            tempQueue = queue;\n            queue = [];\n            counter = 0;\n            Refresh();\n            promise = null;\n        });\n    }\n}\nfunction Refresh() {\n    while (true) {\n        tempQueue.sort((m1: MVVM, m2: MVVM) => {\n            if (m1.$IsParentOf(m2)) {\n                return -1;\n            }\n            if (m2.$IsParentOf(m1)) {\n                return 1;\n            }\n            return 0;\n        });\n        if (counter > maxLoop) {\n            throw new Error(\"refresh loop more than \" + maxLoop);\n        }\n        counter++;\n        tempQueue.forEach(root => {\n            if (!root.$IsDestroyed() && root.$GetDirty())\n                root.$ApplyRefresh();\n        });\n        if (queue.length == 0)\n            break;\n        tempQueue = queue;\n        queue = [];\n    }\n}\n"],"sourceRoot":""}