{"version":3,"sources":["webpack://noreact/webpack/universalModuleDefinition","webpack://noreact/webpack/bootstrap","webpack://noreact/./src/MVVM.ts","webpack://noreact/./src/VNode.ts","webpack://noreact/./src/attribute.ts","webpack://noreact/./src/diff.ts","webpack://noreact/./src/event-center.ts","webpack://noreact/./src/index.ts","webpack://noreact/./src/react.ts","webpack://noreact/./src/refresh.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","diff_1","event_center_1","VNode_1","react_1","__importDefault","refresh_1","MVVM","$props","this","$eventRegister","$children","$isdirty","$refs","hasRenderedDom","toString","watchObject","onInit","onRendered","onDestroyed","$emitUp","event","data","$root","EmitUp","$emitDown","EmitDown","$on","callback","push","RegisterEvent","$broadcast","TriggerEvent","$Trigger","_i","arguments","length","cbs","forEach","cb","apply","$ToDom","$DoRender","doms","ToDom","$attachedVNode","SetDom","$ToHtml","Render","ToHtml","$GetRoot","$SetChildren","children","$Dirty","InsertQueue","$ApplyRefresh","default","ChangeMode","old","target","newroot","$diff","GetParent","$Ref","ref","IsDestroyed","GetInstance","GetDom","res","GetRef","keys","startsWith","VNode","SetMvvm","SetParent","obj","_this","watchers_1","descriptor","getOwnPropertyDescriptor","configurable","value_1","indexOf","set","val","item","watchArray","arr","watchers","overwriteArrayMethods","methodname","method","useOld","oldNode","newNode","GetType","ApplyAttrDiff","GetAttrs","GetChildren","instance","newInstance","assign","olds","news","parent","opers","Diff","$compareVNode","index","state","oldValue","newValue","newValueOrigin","InsertVNode","Rendered","RemoveVNode","isdeprecated","Destroy","$Rendered","$Destroy","$AttachVNode","vnode","left","right","GetAttr","constructor","GetTag","GetText","attribute_1","type","tag","text","attrs","isDestroyed","SetTag","SetText","component","mvvm","child","sibling_1","subdoms","dom","parentNode","insertBefore","top_1","appendChild","splice","AppendChild","domchange","removeChild","SetAttr","newAttrs","eventName","GetEventAttrName","isEvent","removeEventListener","RemoveAttr","style","oldStyle","newStyle","key_1","key_2","addEventListener","ApplyAttr","innerhtmls_1","attrStr","SerializeAttr","join","document","elem_1","createElement","children_1","concat","createTextNode","_a","_b","AttachDom","VNODE_ID","$isServerRender","ServerRender","isServerRender","applyAttr","elem","className","setAttribute","HTMLInputElement","removeAttr","serializeAttr","str","attr","test","slice","toLowerCase","oldset","newset","compare","o2n","n2o","square","row","j","fromRow","fromColumn","initSquare","findShortest","lastnum","same","p1","p2","p3","min","Math","column","states","unit","getOpers","reverse","events","func","args","MVVM_1","React","isInBrowser","Function","counter","ResetCounter","Elem","allchildren","flatten","vnode_1","prefix","Array","textnode","promise","queue","tempQueue","maxLoop","Promise","resolve","reject","then","Error","Refresh"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"noreact\"] = factory();\n\telse\n\t\troot[\"noreact\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import { Diff } from './diff';\nimport { RegisterEvent, TriggerEvent } from './event-center';\nimport { VNode } from './VNode';\nimport React from './react';\nimport { InsertQueue } from './refresh';\n\nexport abstract class MVVM<T> {\n    private $root: VNode;\n    private $attachedVNode: VNode;\n    /**组件内部的事件注册中心 */\n    private $eventRegister: { [event: string]: Function[] } = {};\n    /**组件的名称，使用@Component装饰器设置该值 */\n    public $Name: string;\n    /**该组件拥有的子级虚拟树 */\n    protected $children: VNode[] = [];\n    private $isdirty = false;\n    private $refs: { [key: string]: VNode } = {};\n    protected $props: T;\n    private hasRenderedDom = false;\n\n    constructor($props: T) {\n        if (toString.call($props) == '[object Object]') {\n            this.$props = $props;\n            this.watchObject(this.$props);\n        }\n    }\n    /**初始化函数 */\n    protected onInit(): void { }\n    /**渲染完成后该方法会被调用，此时elem成员变量才可以被访问到 */\n    protected onRendered(): void { }\n    /**销毁函数 */\n    protected onDestroyed(): void { }\n    /**该组建的渲染方法，该方法必须返回一个虚拟树 */\n    protected abstract Render(): VNode;\n\n    /**向所有父级发送消息 */\n    protected $emitUp(event: string, data?: any) {\n        this.$root.EmitUp(event, data, this);\n    }\n    /**向所有子级发送消息 */\n    protected $emitDown(event: string, data?: any) {\n        this.$root.EmitDown(event, data, this);\n    }\n    /**监听事件 */\n    protected $on(\n        event: string,\n        callback: (data: any, target: MVVM<any>) => void\n    ) {\n        if (!this.$eventRegister[event]) this.$eventRegister[event] = [];\n        this.$eventRegister[event].push(callback);\n        RegisterEvent(event, callback);\n    }\n    /**发送一个全局事件 */\n    protected $broadcast(event: string, data?: any) {\n        TriggerEvent(event, this, data);\n    }\n    /**触发该组件的某个事件监听 */\n    $Trigger(event, ...data: any[]) {\n        let cbs = this.$eventRegister[event];\n        if (cbs) {\n            cbs.forEach(cb => cb(...data));\n        }\n    }\n    $ToDom(): (HTMLElement | Text)[] {\n        this.hasRenderedDom = true;\n        if (!this.$root) this.$DoRender();\n        let doms = this.$root.ToDom();\n        this.$attachedVNode.SetDom(doms);\n        return doms;\n    }\n    $ToHtml(): string {\n        return this.Render().ToHtml();\n    }\n    $GetRoot() {\n        if (!this.$root) this.$DoRender();\n        return this.$root;\n    }\n\n    /**设置该组件的子级虚拟树 */\n    $SetChildren(children: VNode[]) {\n        this.$children = children;\n    }\n    $Dirty() {\n        if (!this.$isdirty) {\n            this.$isdirty = true;\n            InsertQueue(this);\n        }\n    }\n    $ApplyRefresh() {\n        if (this.$isdirty) {\n            React.ChangeMode('shallow');\n\n            let old = React.target;\n            React.target = this;\n            let newroot = this.Render();\n            React.target = old;\n\n            React.ChangeMode('deep');\n            this.$diff([this.$root], [newroot], this.$root.GetParent());\n            this.$isdirty = false;\n        }\n    }\n    $Ref(name: string): (MVVM<any> | HTMLElement) {\n        let ref = this.$refs[name];\n        if (ref && !ref.IsDestroyed()) {\n            if (ref.GetInstance())\n                return ref.GetInstance();\n            else\n                return ref.GetDom() && ref.GetDom()[0] as HTMLElement;\n        }\n        let res = this.$root.GetRef(name);\n        if (!res)\n            return null;\n        this.$refs[name] = res;\n        if (res.GetInstance())\n            return res.GetInstance();\n        else\n            return ref.GetDom() && res.GetDom()[0] as HTMLElement;\n    }\n    $DoRender() {\n        this.onInit();\n        let keys = [];\n        Object.keys(this).forEach(key => {\n            if (!key.startsWith('$')) keys.push(key);\n        });\n        keys.length > 0 && this.watchObject(this, keys);\n\n        let old = React.target;\n        React.target = this;\n        this.$root = this.Render();\n        if (!this.$attachedVNode) {\n            this.$attachedVNode = new VNode(\"custom\");\n            this.$attachedVNode.SetMvvm(this);\n        }\n        this.$root.SetParent(this.$attachedVNode);\n        React.target = old;\n        return this.$root;\n    }\n    private watchObject(obj: any, keys?: string[]) {\n        if (toString.call(obj) == '[object Object]' || toString.call(obj) == '[object Array]') {\n            let watchers: MVVM<any>[] = [];\n            ((keys && keys.length > 0 && keys) || Object.keys(obj)).forEach(key => {\n                let descriptor = Object.getOwnPropertyDescriptor(obj, key);\n                if (descriptor && descriptor.configurable) {\n                    let value = obj[key];\n                    Object.defineProperty(obj, key, {\n                        get: () => {\n                            if (\n                                React.target &&\n                                watchers.indexOf(React.target)\n                            ) {\n                                watchers.push(React.target);\n                            }\n                            return value;\n                        },\n                        set: val => {\n                            if (val != value) {\n                                watchers.forEach(item => item.$Dirty());\n                                value = val;\n\n                                if (toString.call(value) == \"[object Array]\")\n                                    this.watchArray(value, watchers);\n                                this.watchObject(value);\n                            }\n                        },\n                        configurable: false,\n                        enumerable: true\n                    });\n                    if (toString.call(value) == \"[object Array]\")\n                        this.watchArray(value, watchers);\n                    this.watchObject(value);\n                }\n            });\n            return;\n        }\n    }\n    private watchArray(arr, watchers: MVVM<any>[]) {\n        this.overwriteArrayMethods(arr, 'pop', watchers);\n        this.overwriteArrayMethods(arr, 'push', watchers);\n        this.overwriteArrayMethods(arr, 'splice', watchers);\n        this.overwriteArrayMethods(arr, 'unshift', watchers);\n        this.overwriteArrayMethods(arr, 'shift', watchers);\n    }\n    private overwriteArrayMethods(arr: any[], methodname: string, watchers: MVVM<any>[]) {\n        let method = arr[methodname];\n        if (typeof method == 'function') {\n            Object.defineProperty(arr, methodname, {\n                value: function () {\n                    watchers.forEach(item => item.$Dirty());\n                    return method.apply(this, arguments);\n                },\n                configurable: false\n            });\n        }\n    }\n    private useOld(oldNode: VNode, newNode: VNode) {\n        if (oldNode.GetType() == 'custom') {\n            let instance = oldNode.GetInstance();\n            let newInstance = newNode.GetInstance();\n            if (instance.$isdirty) {\n                instance.$props = newInstance.$props;\n                instance.watchObject(instance.$props);\n                instance.$ApplyRefresh();\n            } else {\n                Object.assign(\n                    instance.$props,\n                    newInstance.$props\n                );\n            }\n            return;\n        }\n        if (oldNode.GetType() == 'standard') {\n            oldNode.ApplyAttrDiff(newNode.GetAttrs());\n            this.$diff(\n                oldNode.GetChildren(),\n                newNode.GetChildren(),\n                oldNode\n            );\n            return;\n        }\n        if (oldNode.GetType() == 'text') {\n            return;\n        }\n    }\n    private $diff(olds: VNode[], news: VNode[], parent: VNode) {\n        let opers = Diff(olds, news, MVVM.$compareVNode);\n\n        let index = 0;\n        opers.forEach(item => {\n            if (item.state == 'old') {\n                index++;\n                this.useOld(item.oldValue, item.newValue);\n                return;\n            }\n            if (item.state == 'new') {\n                if (item.newValueOrigin) {\n                    this.useOld(item.newValueOrigin, item.newValue);\n                    parent.InsertVNode(item.newValueOrigin, index);\n                } else {\n                    if (this.hasRenderedDom)\n                        item.newValue.ToDom();\n                    parent.InsertVNode(item.newValue, index);\n                    if (this.hasRenderedDom)\n                        item.newValue.Rendered();\n                }\n                index++;\n                return;\n            }\n            if (item.state == 'delete') {\n                parent.RemoveVNode(item.oldValue, index, item.isdeprecated);\n                if (item.isdeprecated) {\n                    item.oldValue.Destroy();\n                }\n                return;\n            }\n            if (item.state == 'replace') {\n                parent.RemoveVNode(item.oldValue, index, item.isdeprecated);\n                if (item.isdeprecated) {\n                    item.oldValue.Destroy();\n                }\n                if (item.newValueOrigin) {\n                    this.useOld(item.newValueOrigin, item.newValue);\n                    parent.InsertVNode(item.newValueOrigin, index);\n                } else {\n                    if (this.hasRenderedDom)\n                        item.newValue.ToDom();\n                    parent.InsertVNode(item.newValue, index);\n                    if (this.hasRenderedDom)\n                        item.newValue.Rendered();\n                }\n                index++;\n            }\n        });\n    }\n    $Rendered() {\n        this.$root.Rendered();\n        this.onRendered();\n    }\n    $Destroy() {\n        this.onDestroyed();\n        this.$root.Destroy();\n    }\n    $AttachVNode(vnode: VNode) {\n        this.$attachedVNode = vnode;\n    }\n    static $compareVNode(left: VNode, right: VNode) {\n        if (left.GetAttr('key') != right.GetAttr('key')) {\n            return false;\n        }\n        if (left.GetType() != right.GetType()) {\n            return false;\n        }\n        if (left.GetType() == 'custom') {\n            if (\n                left.GetInstance().constructor !=\n                right.GetInstance().constructor\n            ) {\n                return false;\n            }\n        }\n        if (left.GetType() == 'standard') {\n            if (left.GetTag() != right.GetTag()) return false;\n        }\n        if (left.GetType() == 'text') {\n            if (left.GetText() != right.GetText()) return false;\n        }\n        return true;\n    }\n}\nexport interface MVVMConstructor<T> {\n    new(params: T): MVVM<T>;\n}\n","import { ApplyAttr, RemoveAttr, SerializeAttr, GetEventAttrName as EventName } from './attribute';\nimport { MVVM } from './MVVM';\n\nexport class VNode {\n    /**虚拟节点名称，即标准html的标签名 */\n    protected tag: string = '';\n    private text: string = '';\n    /**子节点 */\n    protected children: VNode[] = [];\n    /**属性集合 */\n    private attrs: { [key: string]: any } = {};\n    /**父节点 */\n    private parent: VNode = null;\n\n    /**关联的组件实例，当type='custom'有效 */\n    private mvvm: MVVM<any>;\n    /**关联的实际dom元素 */\n    private doms: (HTMLElement | Text)[];\n    /**节点类型 */\n    private type: 'standard' | 'custom' | 'text';\n    /**是否已经被销毁 */\n    private isDestroyed = false;\n\n    constructor(type: 'standard' | 'custom' | 'text') {\n        this.type = type;\n    }\n    SetTag(tag: string) {\n        this.tag = tag;\n    }\n    GetTag() {\n        return this.tag;\n    }\n    GetText() {\n        return this.text;\n    }\n    SetText(text: string) {\n        this.text = text;\n    }\n    SetMvvm(component: MVVM<any>) {\n        this.mvvm = component;\n    }\n    GetInstance() {\n        return this.mvvm;\n    }\n    GetParent() {\n        return this.parent;\n    }\n    /**在索引为index位置增加一个child,index=-1表示在末尾添加，注意会引发实际的dom操作 */\n    InsertVNode(child: VNode, index: number) {\n        //dom操作\n        let doms = child.GetDom();\n        if (doms && doms.length > 0) {\n            let sibling: HTMLElement | Text = null;\n            while (this.children[index]) {\n                let subdoms = this.children[index].GetDom();\n                if (subdoms.length > 0) {\n                    sibling = subdoms[0];\n                    break;\n                } else {\n                    index++;\n                }\n            }\n            if (sibling) {\n                doms.forEach(dom => {\n                    sibling.parentNode.insertBefore(dom, sibling);\n                });\n            } else {\n                let top = this.doms.length > 1 ? this.doms[0].parentNode : this.doms[0];\n                doms.forEach(dom => {\n                    top.appendChild(dom);\n                });\n            }\n        }\n\n        //虚拟dom操作\n        this.children.splice(index, 0, child);\n        child.parent = this;\n    }\n    /**末尾添加一个孩子节点，不包含dom操作 */\n    AppendChild(child: VNode) {\n        child.parent = this;\n        this.children.push(child);\n    }\n    /**移除一个孩子节点，注意会引发dom操作 */\n    RemoveVNode(child: VNode, index: number, domchange: boolean = true) {\n        this.children.splice(index, 1);\n        if (domchange) {\n            let doms = child.GetDom();\n            if (doms)\n                doms.forEach(dom => {\n                    dom.parentNode.removeChild(dom);\n                });\n        }\n    }\n    IsDestroyed() {\n        return this.isDestroyed;\n    }\n    Destroy() {\n        this.isDestroyed = true;\n        if (this.type == 'custom') {\n            this.mvvm.$Destroy();\n        }\n        this.children.forEach(child => {\n            child.Destroy();\n        });\n    }\n    GetChildren() {\n        return this.children;\n    }\n    /**渲染完毕后的回调 */\n    Rendered() {\n        if (this.type == 'custom') this.mvvm.$Rendered();\n        if (this.type == 'standard') {\n            this.children.forEach(child => {\n                child.Rendered();\n            });\n        }\n    }\n    GetDom() {\n        return this.doms;\n    }\n    GetRef(name: string): VNode {\n        let attr = this.attrs['ref'];\n        if (attr)\n            return this;\n        else {\n            if (this.type != 'custom') {\n                for (let i = 0; i < this.children.length; i++) {\n                    let res = this.children[i].GetRef(name);\n                    if (res) {\n                        return res;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    GetType() {\n        return this.type;\n    }\n\n    SetAttr(name: string, value: any) {\n        this.attrs[name] = value;\n    }\n    GetAttr(name: string) {\n        return this.attrs[name];\n    }\n    GetAttrs() {\n        return this.attrs;\n    }\n    SetParent(vnode: VNode) {\n        this.parent = vnode;\n    }\n    ApplyAttrDiff(newAttrs: { [key: string]: any }) {\n        Object.keys(this.attrs).forEach(key => {\n            let eventName = EventName(key);\n            let isEvent = eventName != null;\n            if (newAttrs[key] == null) {\n                //删除的属性\n                if (isEvent) {\n                    (this.doms[0] as HTMLElement).removeEventListener(\n                        eventName,\n                        this.attrs[key]\n                    );\n                } else {\n                    RemoveAttr(this.doms[0] as HTMLElement, key, this.attrs[key]);\n                }\n            } else {\n                //已存在的属性\n                if (\n                    key == 'style' &&\n                    toString.call(this.attrs.style) == '[object Object]' &&\n                    toString.call(newAttrs.style) == '[object Object]'\n                ) {\n                    let oldStyle = this.attrs.style;\n                    let newStyle = newAttrs.style;\n                    for (let key in oldStyle) {\n                        if (!newStyle[key]) {\n                            (this.doms[0] as HTMLElement).style[key] = '';\n                        } else {\n                            if (newStyle[key] != oldStyle[key]) {\n                                (this.doms[0] as HTMLElement).style[key] =\n                                    newStyle[key];\n                            }\n                        }\n                    }\n                    for (let key in newStyle) {\n                        if (!oldStyle[key]) {\n                            (this.doms[0] as HTMLElement).style[key] =\n                                newStyle[key];\n                        }\n                    }\n                    return;\n                }\n                if (isEvent) {\n                    if (this.attrs[key] != newAttrs[key]) {\n                        this.doms[0].removeEventListener(\n                            eventName,\n                            this.attrs[key]\n                        );\n                        this.doms[0].addEventListener(\n                            eventName,\n                            newAttrs[key]\n                        );\n                    }\n                } else {\n                    if (this.attrs[key] != newAttrs[key]) {\n                        RemoveAttr(<HTMLElement>this.doms[0], key, this.attrs[key]);\n                        ApplyAttr(\n                            <HTMLElement>this.doms[0],\n                            key,\n                            newAttrs[key]\n                        );\n                    }\n                }\n            }\n        });\n        Object.keys(newAttrs).forEach(key => {\n            let eventName = EventName(key);\n            let isEvent = eventName != null;\n            if (this.attrs[key] == null) {\n                //新增属性\n                if (isEvent) {\n                    (this.doms[0] as HTMLElement).addEventListener(\n                        eventName,\n                        newAttrs[key]\n                    );\n                } else {\n                    ApplyAttr(\n                        <HTMLElement>this.doms[0],\n                        key,\n                        newAttrs[key]\n                    );\n                }\n            }\n        });\n        this.attrs = newAttrs;\n    }\n    ToHtml(): string {\n        if (this.type == 'text') return this.text;\n        if (this.type == 'custom') {\n            let html = this.mvvm.$ToHtml();\n            return html;\n        }\n        if (this.type == 'standard') {\n            let innerhtmls: string[] = [];\n\n            if (this.tag != 'fragment') {\n                innerhtmls.push(`<${this.tag}`);\n                Object.keys(this.attrs).forEach(key => {\n                    let attrStr = SerializeAttr(key, this.attrs[key]);\n                    if (attrStr) innerhtmls.push(' ' + attrStr);\n                });\n                innerhtmls.push('>');\n            }\n\n            this.children.forEach(child => {\n                let res = child.ToHtml();\n                innerhtmls.push(res);\n            });\n            if (this.tag != 'fragment') innerhtmls.push(`</${this.tag}>`);\n            return innerhtmls.join('');\n        }\n    }\n    ToDom(): (HTMLElement | Text)[] {\n        if (typeof document == 'undefined') {\n            return null;\n        }\n        if (this.type == 'custom') {\n            let doms = this.mvvm.$ToDom();\n            this.doms = doms;\n            return doms;\n        }\n        if (this.type == 'standard') {\n            if (this.tag != 'fragment') {\n                let elem = document.createElement(this.tag);\n                this.doms = [elem];\n                Object.keys(this.attrs).forEach(key => {\n                    let eventName = EventName(key);\n                    if (eventName) {\n                        elem.addEventListener(eventName, this.attrs[key]);\n                    } else ApplyAttr(elem, key, this.attrs[key]);\n                });\n                this.children.forEach(child => {\n                    let doms = child.ToDom();\n                    doms.forEach(dom => elem.appendChild(dom));\n                });\n                return [elem];\n            } else {\n                let children: (HTMLElement | Text)[] = [];\n                this.children.forEach(child => {\n                    let doms = child.ToDom();\n                    children = children.concat(doms);\n                });\n                this.doms = children;\n                return children;\n            }\n        }\n        if (this.type == 'text') {\n            let text = document.createTextNode(this.text);\n            this.doms = [text];\n            return [text];\n        }\n    }\n    EmitUp(event: string, ...data: any[]) {\n        if (this.parent) {\n            if (this.parent.type == 'custom')\n                this.parent.mvvm.$Trigger(event, ...data);\n            this.parent.EmitUp(event, ...data);\n        }\n    }\n    EmitDown(event: string, ...data: any[]) {\n        this.children.forEach(child => {\n            if (child.type == 'custom') {\n                child.mvvm.$Trigger(event, ...data);\n            }\n            child.EmitDown(event, ...data);\n        });\n    }\n\n    AttachDom(dom: HTMLElement | Text) {\n        this.doms = [dom];\n        Object.keys(this.attrs).forEach(key => {\n            let eventName = EventName(key);\n            if (eventName) {\n                dom.addEventListener(eventName, this.attrs[key]);\n            }\n        });\n    }\n    SetDom(doms: (HTMLElement | Text)[]) {\n        this.doms = doms;\n    }\n}\n","export const VNODE_ID = '__decorator__';\nlet $isServerRender = false;\nexport function ServerRender(isServerRender: boolean) {\n    $isServerRender = isServerRender;\n}\nconst applyAttr: { [name: string]: (elem: HTMLElement, value: any) => boolean } = {\n    style: (elem, value) => {\n        if (toString.call(value) == '[object Object]') {\n            for (let key in value) {\n                elem.style[key] = value[key];\n            }\n            return true;\n        }\n        return false;\n    },\n    className: (elem, value) => {\n        elem.setAttribute('class', value);\n        return true;\n    },\n    key: (elem, value) => {\n        return true;\n    },\n    value(elem, value) {\n        if (elem instanceof HTMLInputElement) {\n            elem.value = value;\n            return true;\n        }\n        return false;\n    }\n};\nconst removeAttr: { [name: string]: (elem: HTMLElement, value: any) => boolean } = {\n    style: (elem, value) => {\n        if (toString.call(value) == '[object Object]') {\n            for (let key in value) {\n                elem.style[key] = '';\n            }\n            return true;\n        }\n        return false;\n    },\n    className: (elem, value) => {\n        elem.setAttribute('class', '');\n        return true;\n    },\n    key: (elem, value) => {\n        return true;\n    },\n    value(elem, value) {\n        if (elem instanceof HTMLInputElement) {\n            elem.value = '';\n            return true;\n        }\n        return false;\n    }\n};\nconst serializeAttr: { [name: string]: (value: any) => string } = {\n    style: value => {\n        if (toString.call(value) == '[object Object]') {\n            let str = '';\n            for (let key in value) {\n                str += `${key}=${value[key]};`;\n            }\n            return `style=\"${str}\"`;\n        } else {\n            return 'style=' + value;\n        }\n    },\n    className: value => {\n        return 'class=' + value;\n    },\n    key: value => {\n        return '';\n    },\n    [VNODE_ID]: value => {\n        if ($isServerRender) return VNODE_ID + '=' + value;\n        else return '';\n    }\n};\n/**toHtml方法使用 */\nexport function SerializeAttr(name: string, value: any): string {\n    if (toString.call(value) == '[object Function]') {\n        return '';\n    }\n    if (serializeAttr[name]) {\n        return serializeAttr[name](value);\n    } else {\n        return name + '=' + value;\n    }\n}\n/**toDom方法使用 */\nexport function ApplyAttr(elem: HTMLElement, name: string, value: any) {\n    if (applyAttr[name]) {\n        let res = applyAttr[name](elem, value);\n        if (res)\n            return;\n    }\n    elem.setAttribute(name, value);\n}\nexport function RemoveAttr(elem: HTMLElement, name: string, value: any) {\n    if (removeAttr[name]) {\n        let res = removeAttr[name](elem, value);\n        if (res)\n            return;\n    }\n    elem.setAttribute(name, '');\n}\nexport function GetEventAttrName(attr: string) {\n    if (/^on([A-Z][a-z]+)+$/.test(attr)) {\n        return attr.slice(2).toLowerCase();\n    }\n    return null;\n}\n","export function Diff<T>(\n    oldset: T[],\n    newset: T[],\n    compare: (left: T, right: T) => boolean\n) {\n    let o2n = {};\n    let n2o = {};\n    let square: SquareUnit[][] = initSquare(oldset, newset);\n    findShortest<T>(square, oldset, newset, compare, o2n, n2o);\n    let opers = getOpers(square, oldset, newset, o2n, n2o);\n    opers.reverse();\n    return opers;\n}\n\nfunction findShortest<T>(\n    square: SquareUnit[][],\n    oldset: T[],\n    newset: T[],\n    compare: (left: T, right: T) => boolean,\n    o2n,\n    n2o\n): number {\n    let target = square[oldset.length][newset.length];\n    if (target.value != -1) return target.value;\n\n    let lastnum = 0;\n    let same = compare(oldset[oldset.length - 1], newset[newset.length - 1]);\n    if (same) {\n        lastnum = 0;\n        o2n[oldset.length - 1] = newset.length - 1;\n        n2o[newset.length - 1] = oldset.length - 1;\n    }\n    else lastnum = 1;\n    let p1 =\n        findShortest(\n            square,\n            oldset.slice(0, oldset.length - 1),\n            newset,\n            compare,\n            o2n,\n            n2o\n        ) + 1;\n    let p2 =\n        findShortest(\n            square,\n            oldset,\n            newset.slice(0, newset.length - 1),\n            compare,\n            o2n,\n            n2o\n        ) + 1;\n    let p3 =\n        findShortest(\n            square,\n            oldset.slice(0, oldset.length - 1),\n            newset.slice(0, newset.length - 1),\n            compare,\n            o2n,\n            n2o\n        ) + lastnum;\n\n    let min = Math.min(p1, p2, p3);\n    target.value = min;\n\n    if (min == p1) {\n        target.fromRow = oldset.length - 1;\n        target.fromColumn = newset.length;\n    } else {\n        if (min == p2) {\n            target.fromRow = oldset.length;\n            target.fromColumn = newset.length - 1;\n        } else {\n            target.fromRow = oldset.length - 1;\n            target.fromColumn = newset.length - 1;\n        }\n    }\n\n    return target.value;\n}\nfunction initSquare<T>(oldset: T[], newset: T[]) {\n    let square: SquareUnit[][] = [];\n    for (let i = 0; i <= oldset.length; i++) {\n        let row = [];\n        for (let j = 0; j <= newset.length; j++) {\n            if (i == 0) {\n                row.push({ value: j, fromRow: 0, fromColumn: j - 1 });\n                continue;\n            }\n            if (j == 0) {\n                row.push({ value: i, fromRow: i - 1, fromColumn: 0 });\n                continue;\n            }\n            row.push({ value: -1, fromRow: -1, fromColumn: -1 });\n        }\n        square.push(row);\n    }\n    return square;\n}\n\ninterface SquareUnit {\n    value: number;\n    fromRow: number;\n    fromColumn: number;\n}\ninterface NextState<T> {\n    oldValue?: T;\n    isdeprecated?: boolean,\n    /**当state为old类型时newValue表示新值 */\n    newValue?: T;\n    newValueOrigin?: T;\n    state: 'new' | 'delete' | 'old' | 'replace';\n}\n\nfunction getOpers<T>(\n    square: SquareUnit[][],\n    oldset: T[],\n    newset: T[],\n    o2n,\n    n2o\n): NextState<T>[] {\n    let column = newset.length;\n    let row = oldset.length;\n\n    let states: NextState<T>[] = [];\n    while (true) {\n        if (row == 0 && column == 0) {\n            break;\n        }\n        let unit = square[row][column];\n        if (unit.fromColumn == column - 1 && unit.fromRow == row - 1) {\n            if (unit.value != square[row - 1][column - 1].value) {\n                states.push({\n                    oldValue: oldset[row - 1],\n                    isdeprecated: o2n[row - 1] == null,\n                    state: 'replace',\n                    newValue: newset[column - 1],\n                    newValueOrigin: oldset[n2o[column - 1]]\n                });\n            } else {\n                states.push({\n                    oldValue: oldset[row - 1],\n                    state: 'old',\n                    newValue: newset[column - 1]\n                });\n            }\n            row--;\n            column--;\n            continue;\n        }\n        if (unit.fromColumn == column && unit.fromRow == row - 1) {\n            states.push({ oldValue: oldset[row - 1], state: 'delete', isdeprecated: o2n[row - 1] == null });\n            row--;\n            continue;\n        }\n        if (unit.fromColumn == column - 1 && unit.fromRow == row) {\n            states.push({ newValue: newset[column - 1], state: 'new', newValueOrigin: oldset[n2o[column - 1]] });\n            column--;\n            continue;\n        }\n    }\n    return states;\n}\n","let events: { [name: string]: Function[] } = {};\n\nexport function RegisterEvent(event: string, func: Function) {\n    if (!events[event]) {\n        events[event] = [];\n    }\n    events[event].push(func);\n}\nexport function TriggerEvent(event: string, ...args: any[]) {\n    if (events[event]) {\n        events[event].forEach(func => {\n            func(...args);\n        });\n    }\n}\n","export { MVVM } from './MVVM';\nexport { default as React } from './react';\nexport { VNode } from './VNode';","import { VNode } from './VNode';\nimport { MVVMConstructor, MVVM } from './MVVM';\nimport { VNODE_ID } from './attribute';\n\nconst isInBrowser = new Function(\n    'try {return this===window;}catch(e){ return false;}'\n);\nclass React {\n    private counter = 0;\n    private mode: 'deep' | 'shallow' = 'deep';\n    public target: MVVM<any>;\n    ResetCounter() {\n        this.counter = 0;\n    }\n    createElement(\n        Elem: string | MVVMConstructor<any>,\n        attrs: { [key: string]: any },\n        ...children: (VNode | VNode[] | string)[]\n    ): VNode {\n        let allchildren: VNode[] = [];\n        this.flatten('', children, allchildren);\n\n        if (typeof Elem == 'string') {\n            let vnode: VNode = new VNode('standard');\n            vnode.SetTag(Elem);\n            if (!isInBrowser()) {\n                vnode.SetAttr(VNODE_ID, this.counter);\n                this.counter++;\n            }\n\n            if (attrs != null) {\n                for (let key in attrs) {\n                    vnode.SetAttr(key, attrs[key]);\n                }\n            }\n            allchildren.forEach(child => {\n                vnode.AppendChild(child);\n            });\n            return vnode;\n        } else {\n            let vnode = new VNode('custom');\n            if (!isInBrowser()) {\n                vnode.SetAttr(VNODE_ID, this.counter);\n                this.counter++;\n            }\n\n            let mvvm = new Elem(attrs);\n\n            vnode.SetMvvm(mvvm);\n            mvvm.$SetChildren(allchildren);\n            mvvm.$AttachVNode(vnode);\n            if (this.mode == 'deep') {\n                mvvm.$DoRender();\n            }\n\n            if (attrs != null) {\n                for (let key in attrs) {\n                    vnode.SetAttr(key, attrs[key]);\n                }\n            }\n            return vnode;\n        }\n    }\n\n    private flatten(prefix: string, children: any[], res: VNode[]) {\n        children.forEach((child, index) => {\n            if (child == null) return;\n            if (child instanceof Array) {\n                this.flatten(prefix + index + '_', child, res);\n            } else {\n                if (child instanceof VNode) {\n                    let key = child.GetAttr('key');\n                    if (key != null) {\n                        res.push(child);\n                    } else {\n                        child.SetAttr('key', prefix + index);\n                        res.push(child);\n                    }\n                } else {\n                    let textnode = new VNode('text');\n                    textnode.SetText(child + '');\n                    textnode.SetAttr('key', prefix + index);\n                    res.push(textnode);\n                }\n            }\n        });\n    }\n    ChangeMode(mode: 'shallow' | 'deep') {\n        this.mode = mode;\n    }\n}\nexport default new React();\n","import { MVVM } from './MVVM';\n\nlet queue: MVVM<any>[] = [];\nlet tempQueue = [];\nlet maxLoop = 10;\nlet counter = 0;\n\nlet promise: Promise<void>;\nexport function InsertQueue(mvvm: MVVM<any>) {\n    if (queue.indexOf(mvvm) != -1) {\n        return;\n    }\n    queue.push(mvvm);\n\n    if (!promise && queue.length > 0) {\n        promise = new Promise((resolve, reject) => {\n            resolve();\n        }).then(() => {\n            tempQueue = queue;\n            queue = [];\n            counter = 0;\n            Refresh();\n            promise = null;\n        });\n    }\n}\nfunction Refresh() {\n    while (true) {\n        if (counter > maxLoop) {\n            throw new Error(\"refresh loop more than \" + maxLoop);\n        }\n        counter++;\n        tempQueue.forEach(root => {\n            root.$ApplyRefresh();\n        });\n        if (queue.length == 0)\n            break;\n        tempQueue = queue;\n        queue = [];\n    }\n}\n"],"sourceRoot":""}